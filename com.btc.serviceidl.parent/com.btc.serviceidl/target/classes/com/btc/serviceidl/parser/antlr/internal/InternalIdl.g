/*
 * generated by Xtext 2.13.0
 */
grammar InternalIdl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.btc.serviceidl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.btc.serviceidl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.btc.serviceidl.services.IdlGrammarAccess;

}

@parser::members {

 	private IdlGrammarAccess grammarAccess;

    public InternalIdlParser(TokenStream input, IdlGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "IDLSpecification";
   	}

   	@Override
   	protected IdlGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleIDLSpecification
entryRuleIDLSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIDLSpecificationRule()); }
	iv_ruleIDLSpecification=ruleIDLSpecification
	{ $current=$iv_ruleIDLSpecification.current; }
	EOF;

// Rule IDLSpecification
ruleIDLSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIDLSpecificationAccess().getImportedEntitiesImportDeclarationParserRuleCall_0_0());
				}
				lv_importedEntities_0_0=ruleImportDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIDLSpecificationRule());
					}
					add(
						$current,
						"importedEntities",
						lv_importedEntities_0_0,
						"com.btc.serviceidl.Idl.ImportDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getIDLSpecificationAccess().getModulesModuleDeclarationParserRuleCall_1_0());
				}
				lv_modules_1_0=ruleModuleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIDLSpecificationRule());
					}
					add(
						$current,
						"modules",
						lv_modules_1_0,
						"com.btc.serviceidl.Idl.ModuleDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleImportDeclaration
entryRuleImportDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportDeclarationRule()); }
	iv_ruleImportDeclaration=ruleImportDeclaration
	{ $current=$iv_ruleImportDeclaration.current; }
	EOF;

// Rule ImportDeclaration
ruleImportDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportDeclarationAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0());
				}
				lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportDeclarationRule());
					}
					set(
						$current,
						"importedNamespace",
						lv_importedNamespace_1_0,
						"com.btc.serviceidl.Idl.QualifiedNameWithWildcard");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleModuleDeclaration
entryRuleModuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuleDeclarationRule()); }
	iv_ruleModuleDeclaration=ruleModuleDeclaration
	{ $current=$iv_ruleModuleDeclaration.current; }
	EOF;

// Rule ModuleDeclaration
ruleModuleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_virtual_0_0='virtual'
				{
					newLeafNode(lv_virtual_0_0, grammarAccess.getModuleDeclarationAccess().getVirtualVirtualKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModuleDeclarationRule());
					}
					setWithLastConsumed($current, "virtual", true, "virtual");
				}
			)
		)?
		(
			(
				lv_main_1_0='main'
				{
					newLeafNode(lv_main_1_0, grammarAccess.getModuleDeclarationAccess().getMainMainKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModuleDeclarationRule());
					}
					setWithLastConsumed($current, "main", true, "main");
				}
			)
		)?
		otherlv_2='module'
		{
			newLeafNode(otherlv_2, grammarAccess.getModuleDeclarationAccess().getModuleKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getModuleDeclarationAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModuleDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getModuleDeclarationAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleDeclarationAccess().getModuleComponentsAbstractModuleComponentParserRuleCall_5_0());
				}
				lv_moduleComponents_5_0=ruleAbstractModuleComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleDeclarationRule());
					}
					add(
						$current,
						"moduleComponents",
						lv_moduleComponents_5_0,
						"com.btc.serviceidl.Idl.AbstractModuleComponent");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleDeclarationAccess().getNestedModulesModuleDeclarationParserRuleCall_6_0());
				}
				lv_nestedModules_6_0=ruleModuleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleDeclarationRule());
					}
					add(
						$current,
						"nestedModules",
						lv_nestedModules_6_0,
						"com.btc.serviceidl.Idl.ModuleDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getModuleDeclarationAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleAbstractModuleComponent
entryRuleAbstractModuleComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractModuleComponentRule()); }
	iv_ruleAbstractModuleComponent=ruleAbstractModuleComponent
	{ $current=$iv_ruleAbstractModuleComponent.current; }
	EOF;

// Rule AbstractModuleComponent
ruleAbstractModuleComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getAbstractModuleComponentAccess().getEnumDeclarationParserRuleCall_0_0());
			}
			this_EnumDeclaration_0=ruleEnumDeclaration
			{
				$current = $this_EnumDeclaration_0.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getAbstractModuleComponentAccess().getSemicolonKeyword_0_1());
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getAbstractModuleComponentAccess().getStructDeclarationParserRuleCall_1_0());
			}
			this_StructDeclaration_2=ruleStructDeclaration
			{
				$current = $this_StructDeclaration_2.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getAbstractModuleComponentAccess().getSemicolonKeyword_1_1());
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getAbstractModuleComponentAccess().getAbstractExceptionParserRuleCall_2_0());
			}
			this_AbstractException_4=ruleAbstractException
			{
				$current = $this_AbstractException_4.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getAbstractModuleComponentAccess().getSemicolonKeyword_2_1());
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getAbstractModuleComponentAccess().getInterfaceDeclarationParserRuleCall_3_0());
			}
			this_InterfaceDeclaration_6=ruleInterfaceDeclaration
			{
				$current = $this_InterfaceDeclaration_6.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_7=';'
			{
				newLeafNode(otherlv_7, grammarAccess.getAbstractModuleComponentAccess().getSemicolonKeyword_3_1());
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getAbstractModuleComponentAccess().getAliasDeclarationParserRuleCall_4_0());
			}
			this_AliasDeclaration_8=ruleAliasDeclaration
			{
				$current = $this_AliasDeclaration_8.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_9=';'
			{
				newLeafNode(otherlv_9, grammarAccess.getAbstractModuleComponentAccess().getSemicolonKeyword_4_1());
			}
		)
	)
;

// Entry rule entryRuleAbstractException
entryRuleAbstractException returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractExceptionRule()); }
	iv_ruleAbstractException=ruleAbstractException
	{ $current=$iv_ruleAbstractException.current; }
	EOF;

// Rule AbstractException
ruleAbstractException returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractExceptionAccess().getExceptionReferenceDeclarationParserRuleCall_0());
		}
		this_ExceptionReferenceDeclaration_0=ruleExceptionReferenceDeclaration
		{
			$current = $this_ExceptionReferenceDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractExceptionAccess().getExceptionDeclarationParserRuleCall_1());
		}
		this_ExceptionDeclaration_1=ruleExceptionDeclaration
		{
			$current = $this_ExceptionDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExceptionReferenceDeclaration
entryRuleExceptionReferenceDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExceptionReferenceDeclarationRule()); }
	iv_ruleExceptionReferenceDeclaration=ruleExceptionReferenceDeclaration
	{ $current=$iv_ruleExceptionReferenceDeclaration.current; }
	EOF;

// Rule ExceptionReferenceDeclaration
ruleExceptionReferenceDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='exception'
		{
			newLeafNode(otherlv_0, grammarAccess.getExceptionReferenceDeclarationAccess().getExceptionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getExceptionReferenceDeclarationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExceptionReferenceDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='ref'
		{
			newLeafNode(otherlv_2, grammarAccess.getExceptionReferenceDeclarationAccess().getRefKeyword_2());
		}
		(
			(
				lv_location_3_0=RULE_STRING
				{
					newLeafNode(lv_location_3_0, grammarAccess.getExceptionReferenceDeclarationAccess().getLocationSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExceptionReferenceDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"location",
						lv_location_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleExceptionDeclaration
entryRuleExceptionDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExceptionDeclarationRule()); }
	iv_ruleExceptionDeclaration=ruleExceptionDeclaration
	{ $current=$iv_ruleExceptionDeclaration.current; }
	EOF;

// Rule ExceptionDeclaration
ruleExceptionDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='exception'
		{
			newLeafNode(otherlv_0, grammarAccess.getExceptionDeclarationAccess().getExceptionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getExceptionDeclarationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExceptionDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getExceptionDeclarationAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExceptionDeclarationRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getExceptionDeclarationAccess().getSupertypeAbstractExceptionCrossReference_2_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getExceptionDeclarationAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExceptionDeclarationAccess().getMembersMemberElementParserRuleCall_4_0_0());
					}
					lv_members_5_0=ruleMemberElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExceptionDeclarationRule());
						}
						add(
							$current,
							"members",
							lv_members_5_0,
							"com.btc.serviceidl.Idl.MemberElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=';'
			{
				newLeafNode(otherlv_6, grammarAccess.getExceptionDeclarationAccess().getSemicolonKeyword_4_1());
			}
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getExceptionDeclarationAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleAbstractTypeDeclaration
entryRuleAbstractTypeDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractTypeDeclarationRule()); }
	iv_ruleAbstractTypeDeclaration=ruleAbstractTypeDeclaration
	{ $current=$iv_ruleAbstractTypeDeclaration.current; }
	EOF;

// Rule AbstractTypeDeclaration
ruleAbstractTypeDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractTypeDeclarationAccess().getAliasDeclarationParserRuleCall_0());
		}
		this_AliasDeclaration_0=ruleAliasDeclaration
		{
			$current = $this_AliasDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractTypeDeclarationAccess().getEnumDeclarationParserRuleCall_1());
		}
		this_EnumDeclaration_1=ruleEnumDeclaration
		{
			$current = $this_EnumDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractTypeDeclarationAccess().getStructDeclarationParserRuleCall_2());
		}
		this_StructDeclaration_2=ruleStructDeclaration
		{
			$current = $this_StructDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractTypeDeclarationAccess().getAbstractExceptionParserRuleCall_3());
		}
		this_AbstractException_3=ruleAbstractException
		{
			$current = $this_AbstractException_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAbstractType
entryRuleAbstractType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractTypeRule()); }
	iv_ruleAbstractType=ruleAbstractType
	{ $current=$iv_ruleAbstractType.current; }
	EOF;

// Rule AbstractType
ruleAbstractType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAbstractTypeAccess().getPrimitiveTypePrimitiveTypeParserRuleCall_0_0());
				}
				lv_primitiveType_0_0=rulePrimitiveType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbstractTypeRule());
					}
					set(
						$current,
						"primitiveType",
						lv_primitiveType_0_0,
						"com.btc.serviceidl.Idl.PrimitiveType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAbstractTypeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getAbstractTypeAccess().getReferenceTypeAbstractCrossReferenceCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getAbstractTypeAccess().getCollectionTypeAbstractCollectionParserRuleCall_2_0());
				}
				lv_collectionType_2_0=ruleAbstractCollection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbstractTypeRule());
					}
					set(
						$current,
						"collectionType",
						lv_collectionType_2_0,
						"com.btc.serviceidl.Idl.AbstractCollection");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAliasDeclaration
entryRuleAliasDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAliasDeclarationRule()); }
	iv_ruleAliasDeclaration=ruleAliasDeclaration
	{ $current=$iv_ruleAliasDeclaration.current; }
	EOF;

// Rule AliasDeclaration
ruleAliasDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='typedef'
		{
			newLeafNode(otherlv_0, grammarAccess.getAliasDeclarationAccess().getTypedefKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAliasDeclarationAccess().getTypeAbstractTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleAbstractType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAliasDeclarationRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"com.btc.serviceidl.Idl.AbstractType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getAliasDeclarationAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAliasDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleEnumDeclaration
entryRuleEnumDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumDeclarationRule()); }
	iv_ruleEnumDeclaration=ruleEnumDeclaration
	{ $current=$iv_ruleEnumDeclaration.current; }
	EOF;

// Rule EnumDeclaration
ruleEnumDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='enum'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumDeclarationAccess().getEnumKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnumDeclarationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEnumDeclarationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				lv_containedIdentifiers_3_0=RULE_ID
				{
					newLeafNode(lv_containedIdentifiers_3_0, grammarAccess.getEnumDeclarationAccess().getContainedIdentifiersIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumDeclarationRule());
					}
					addWithLastConsumed(
						$current,
						"containedIdentifiers",
						lv_containedIdentifiers_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getEnumDeclarationAccess().getCommaKeyword_4_0());
			}
			(
				(
					lv_containedIdentifiers_5_0=RULE_ID
					{
						newLeafNode(lv_containedIdentifiers_5_0, grammarAccess.getEnumDeclarationAccess().getContainedIdentifiersIDTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEnumDeclarationRule());
						}
						addWithLastConsumed(
							$current,
							"containedIdentifiers",
							lv_containedIdentifiers_5_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getEnumDeclarationAccess().getRightCurlyBracketKeyword_5());
		}
		(
			(
				lv_declarator_7_0=RULE_ID
				{
					newLeafNode(lv_declarator_7_0, grammarAccess.getEnumDeclarationAccess().getDeclaratorIDTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"declarator",
						lv_declarator_7_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
	)
;

// Entry rule entryRuleAbstractCollection
entryRuleAbstractCollection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractCollectionRule()); }
	iv_ruleAbstractCollection=ruleAbstractCollection
	{ $current=$iv_ruleAbstractCollection.current; }
	EOF;

// Rule AbstractCollection
ruleAbstractCollection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractCollectionAccess().getSequenceDeclarationParserRuleCall_0());
		}
		this_SequenceDeclaration_0=ruleSequenceDeclaration
		{
			$current = $this_SequenceDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractCollectionAccess().getTupleDeclarationParserRuleCall_1());
		}
		this_TupleDeclaration_1=ruleTupleDeclaration
		{
			$current = $this_TupleDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSequenceDeclaration
entryRuleSequenceDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSequenceDeclarationRule()); }
	iv_ruleSequenceDeclaration=ruleSequenceDeclaration
	{ $current=$iv_ruleSequenceDeclaration.current; }
	EOF;

// Rule SequenceDeclaration
ruleSequenceDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sequence'
		{
			newLeafNode(otherlv_0, grammarAccess.getSequenceDeclarationAccess().getSequenceKeyword_0());
		}
		otherlv_1='<'
		{
			newLeafNode(otherlv_1, grammarAccess.getSequenceDeclarationAccess().getLessThanSignKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSequenceDeclarationAccess().getTypeAbstractTypeParserRuleCall_2_0_0());
					}
					lv_type_2_0=ruleAbstractType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSequenceDeclarationRule());
						}
						set(
							$current,
							"type",
							lv_type_2_0,
							"com.btc.serviceidl.Idl.AbstractType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						lv_failable_3_0='failable'
						{
							newLeafNode(lv_failable_3_0, grammarAccess.getSequenceDeclarationAccess().getFailableFailableKeyword_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSequenceDeclarationRule());
							}
							setWithLastConsumed($current, "failable", true, "failable");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getSequenceDeclarationAccess().getTypeAbstractTypeParserRuleCall_2_1_1_0());
						}
						lv_type_4_0=ruleAbstractType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSequenceDeclarationRule());
							}
							set(
								$current,
								"type",
								lv_type_4_0,
								"com.btc.serviceidl.Idl.AbstractType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_5='raises'
					{
						newLeafNode(otherlv_5, grammarAccess.getSequenceDeclarationAccess().getRaisesKeyword_2_1_2_0());
					}
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSequenceDeclarationRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getSequenceDeclarationAccess().getRaisedExceptionsAbstractExceptionCrossReference_2_1_2_1_0());
							}
							ruleQualifiedName
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_7=','
						{
							newLeafNode(otherlv_7, grammarAccess.getSequenceDeclarationAccess().getCommaKeyword_2_1_2_2_0());
						}
						(
							(
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getSequenceDeclarationRule());
									}
								}
								{
									newCompositeNode(grammarAccess.getSequenceDeclarationAccess().getRaisedExceptionsAbstractExceptionCrossReference_2_1_2_2_1_0());
								}
								ruleQualifiedName
								{
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)?
			)
		)
		otherlv_9='>'
		{
			newLeafNode(otherlv_9, grammarAccess.getSequenceDeclarationAccess().getGreaterThanSignKeyword_3());
		}
		(
			otherlv_10='['
			{
				newLeafNode(otherlv_10, grammarAccess.getSequenceDeclarationAccess().getLeftSquareBracketKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSequenceDeclarationAccess().getSequenceHintsAbstractSequenceHintParserRuleCall_4_1_0());
					}
					lv_sequenceHints_11_0=ruleAbstractSequenceHint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSequenceDeclarationRule());
						}
						add(
							$current,
							"sequenceHints",
							lv_sequenceHints_11_0,
							"com.btc.serviceidl.Idl.AbstractSequenceHint");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getSequenceDeclarationAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSequenceDeclarationAccess().getSequenceHintsAbstractSequenceHintParserRuleCall_4_2_1_0());
						}
						lv_sequenceHints_13_0=ruleAbstractSequenceHint
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSequenceDeclarationRule());
							}
							add(
								$current,
								"sequenceHints",
								lv_sequenceHints_13_0,
								"com.btc.serviceidl.Idl.AbstractSequenceHint");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14=']'
			{
				newLeafNode(otherlv_14, grammarAccess.getSequenceDeclarationAccess().getRightSquareBracketKeyword_4_3());
			}
		)?
	)
;

// Entry rule entryRuleAbstractSequenceHint
entryRuleAbstractSequenceHint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractSequenceHintRule()); }
	iv_ruleAbstractSequenceHint=ruleAbstractSequenceHint
	{ $current=$iv_ruleAbstractSequenceHint.current; }
	EOF;

// Rule AbstractSequenceHint
ruleAbstractSequenceHint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractSequenceHintAccess().getTypicalLengthHintParserRuleCall_0());
		}
		this_TypicalLengthHint_0=ruleTypicalLengthHint
		{
			$current = $this_TypicalLengthHint_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractSequenceHintAccess().getTypicalSizeHintParserRuleCall_1());
		}
		this_TypicalSizeHint_1=ruleTypicalSizeHint
		{
			$current = $this_TypicalSizeHint_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypicalLengthHint
entryRuleTypicalLengthHint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypicalLengthHintRule()); }
	iv_ruleTypicalLengthHint=ruleTypicalLengthHint
	{ $current=$iv_ruleTypicalLengthHint.current; }
	EOF;

// Rule TypicalLengthHint
ruleTypicalLengthHint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='typical'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypicalLengthHintAccess().getTypicalKeyword_0());
		}
		otherlv_1='sequence'
		{
			newLeafNode(otherlv_1, grammarAccess.getTypicalLengthHintAccess().getSequenceKeyword_1());
		}
		otherlv_2='length'
		{
			newLeafNode(otherlv_2, grammarAccess.getTypicalLengthHintAccess().getLengthKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getTypicalLengthHintAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_length_4_0=RULE_INT
				{
					newLeafNode(lv_length_4_0, grammarAccess.getTypicalLengthHintAccess().getLengthINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypicalLengthHintRule());
					}
					setWithLastConsumed(
						$current,
						"length",
						lv_length_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleTypicalSizeHint
entryRuleTypicalSizeHint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypicalSizeHintRule()); }
	iv_ruleTypicalSizeHint=ruleTypicalSizeHint
	{ $current=$iv_ruleTypicalSizeHint.current; }
	EOF;

// Rule TypicalSizeHint
ruleTypicalSizeHint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='typical'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypicalSizeHintAccess().getTypicalKeyword_0());
		}
		otherlv_1='element'
		{
			newLeafNode(otherlv_1, grammarAccess.getTypicalSizeHintAccess().getElementKeyword_1());
		}
		otherlv_2='size'
		{
			newLeafNode(otherlv_2, grammarAccess.getTypicalSizeHintAccess().getSizeKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getTypicalSizeHintAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_size_4_0=RULE_INT
				{
					newLeafNode(lv_size_4_0, grammarAccess.getTypicalSizeHintAccess().getSizeINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypicalSizeHintRule());
					}
					setWithLastConsumed(
						$current,
						"size",
						lv_size_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleTupleDeclaration
entryRuleTupleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTupleDeclarationRule()); }
	iv_ruleTupleDeclaration=ruleTupleDeclaration
	{ $current=$iv_ruleTupleDeclaration.current; }
	EOF;

// Rule TupleDeclaration
ruleTupleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='tuple'
		{
			newLeafNode(otherlv_0, grammarAccess.getTupleDeclarationAccess().getTupleKeyword_0());
		}
		otherlv_1='<'
		{
			newLeafNode(otherlv_1, grammarAccess.getTupleDeclarationAccess().getLessThanSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTupleDeclarationAccess().getTypesAbstractTypeParserRuleCall_2_0());
				}
				lv_types_2_0=ruleAbstractType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTupleDeclarationRule());
					}
					add(
						$current,
						"types",
						lv_types_2_0,
						"com.btc.serviceidl.Idl.AbstractType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getTupleDeclarationAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTupleDeclarationAccess().getTypesAbstractTypeParserRuleCall_3_1_0());
					}
					lv_types_4_0=ruleAbstractType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTupleDeclarationRule());
						}
						add(
							$current,
							"types",
							lv_types_4_0,
							"com.btc.serviceidl.Idl.AbstractType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='>'
		{
			newLeafNode(otherlv_5, grammarAccess.getTupleDeclarationAccess().getGreaterThanSignKeyword_4());
		}
	)
;

// Entry rule entryRuleStructDeclaration
entryRuleStructDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructDeclarationRule()); }
	iv_ruleStructDeclaration=ruleStructDeclaration
	{ $current=$iv_ruleStructDeclaration.current; }
	EOF;

// Rule StructDeclaration
ruleStructDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='struct'
		{
			newLeafNode(otherlv_0, grammarAccess.getStructDeclarationAccess().getStructKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStructDeclarationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStructDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getStructDeclarationAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStructDeclarationRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getStructDeclarationAccess().getSupertypeStructDeclarationCrossReference_2_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getStructDeclarationAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getStructDeclarationAccess().getMembersMemberElementParserRuleCall_4_0_0_0());
						}
						lv_members_5_0=ruleMemberElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
							}
							add(
								$current,
								"members",
								lv_members_5_0,
								"com.btc.serviceidl.Idl.MemberElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getStructDeclarationAccess().getTypeDeclsAbstractTypeDeclarationParserRuleCall_4_0_1_0());
						}
						lv_typeDecls_6_0=ruleAbstractTypeDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
							}
							add(
								$current,
								"typeDecls",
								lv_typeDecls_6_0,
								"com.btc.serviceidl.Idl.AbstractTypeDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			otherlv_7=';'
			{
				newLeafNode(otherlv_7, grammarAccess.getStructDeclarationAccess().getSemicolonKeyword_4_1());
			}
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getStructDeclarationAccess().getRightCurlyBracketKeyword_5());
		}
		(
			(
				lv_declarator_9_0=RULE_ID
				{
					newLeafNode(lv_declarator_9_0, grammarAccess.getStructDeclarationAccess().getDeclaratorIDTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStructDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"declarator",
						lv_declarator_9_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
	)
;

// Entry rule entryRuleMemberElement
entryRuleMemberElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMemberElementRule()); }
	iv_ruleMemberElement=ruleMemberElement
	{ $current=$iv_ruleMemberElement.current; }
	EOF;

// Rule MemberElement
ruleMemberElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_optional_0_0='optional'
				{
					newLeafNode(lv_optional_0_0, grammarAccess.getMemberElementAccess().getOptionalOptionalKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMemberElementRule());
					}
					setWithLastConsumed($current, "optional", true, "optional");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMemberElementAccess().getTypeAbstractTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleAbstractType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMemberElementRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"com.btc.serviceidl.Idl.AbstractType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getMemberElementAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMemberElementRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleKeyElement
entryRuleKeyElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyElementRule()); }
	iv_ruleKeyElement=ruleKeyElement
	{ $current=$iv_ruleKeyElement.current; }
	EOF;

// Rule KeyElement
ruleKeyElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyElementAccess().getTypeAbstractTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruleAbstractType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyElementRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"com.btc.serviceidl.Idl.AbstractType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_keyName_1_0=RULE_ID
				{
					newLeafNode(lv_keyName_1_0, grammarAccess.getKeyElementAccess().getKeyNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getKeyElementRule());
					}
					setWithLastConsumed(
						$current,
						"keyName",
						lv_keyName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleInterfaceDeclaration
entryRuleInterfaceDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceDeclarationRule()); }
	iv_ruleInterfaceDeclaration=ruleInterfaceDeclaration
	{ $current=$iv_ruleInterfaceDeclaration.current; }
	EOF;

// Rule InterfaceDeclaration
ruleInterfaceDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceDeclarationAccess().getDocCommentsDocCommentElementParserRuleCall_0_0());
				}
				lv_docComments_0_0=ruleDocCommentElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceDeclarationRule());
					}
					add(
						$current,
						"docComments",
						lv_docComments_0_0,
						"com.btc.serviceidl.Idl.DocCommentElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				lv_abstract_1_0='abstract'
				{
					newLeafNode(lv_abstract_1_0, grammarAccess.getInterfaceDeclarationAccess().getAbstractAbstractKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInterfaceDeclarationRule());
					}
					setWithLastConsumed($current, "abstract", true, "abstract");
				}
			)
		)?
		otherlv_2='interface'
		{
			newLeafNode(otherlv_2, grammarAccess.getInterfaceDeclarationAccess().getInterfaceKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getInterfaceDeclarationAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInterfaceDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getInterfaceDeclarationAccess().getLeftSquareBracketKeyword_4_0());
			}
			(
				(
					{ 
					  getUnorderedGroupHelper().enter(grammarAccess.getInterfaceDeclarationAccess().getUnorderedGroup_4_1());
					}
					(
						(
				(
					{getUnorderedGroupHelper().canSelect(grammarAccess.getInterfaceDeclarationAccess().getUnorderedGroup_4_1(), 0)}?=>(
						{
							getUnorderedGroupHelper().select(grammarAccess.getInterfaceDeclarationAccess().getUnorderedGroup_4_1(), 0);
						}
									({true}?=>(otherlv_6='version'
									{
										newLeafNode(otherlv_6, grammarAccess.getInterfaceDeclarationAccess().getVersionKeyword_4_1_0_0());
									}
									otherlv_7='='
									{
										newLeafNode(otherlv_7, grammarAccess.getInterfaceDeclarationAccess().getEqualsSignKeyword_4_1_0_1());
									}
									(
										(
											lv_version_8_0=RULE_VERSION
											{
												newLeafNode(lv_version_8_0, grammarAccess.getInterfaceDeclarationAccess().getVersionVERSIONTerminalRuleCall_4_1_0_2_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getInterfaceDeclarationRule());
												}
												setWithLastConsumed(
													$current,
													"version",
													lv_version_8_0,
													"com.btc.serviceidl.Idl.VERSION");
											}
										)
									)
									))
						{ 
							getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInterfaceDeclarationAccess().getUnorderedGroup_4_1());
						}
					)
				)|
				(
					{getUnorderedGroupHelper().canSelect(grammarAccess.getInterfaceDeclarationAccess().getUnorderedGroup_4_1(), 1)}?=>(
						{
							getUnorderedGroupHelper().select(grammarAccess.getInterfaceDeclarationAccess().getUnorderedGroup_4_1(), 1);
						}
									({true}?=>(otherlv_9='guid'
									{
										newLeafNode(otherlv_9, grammarAccess.getInterfaceDeclarationAccess().getGuidKeyword_4_1_1_0());
									}
									otherlv_10='='
									{
										newLeafNode(otherlv_10, grammarAccess.getInterfaceDeclarationAccess().getEqualsSignKeyword_4_1_1_1());
									}
									(
										(
											lv_guid_11_0=RULE_UUID_LITERAL
											{
												newLeafNode(lv_guid_11_0, grammarAccess.getInterfaceDeclarationAccess().getGuidUUID_LITERALTerminalRuleCall_4_1_1_2_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getInterfaceDeclarationRule());
												}
												setWithLastConsumed(
													$current,
													"guid",
													lv_guid_11_0,
													"com.btc.serviceidl.Idl.UUID_LITERAL");
											}
										)
									)
									))
						{ 
							getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInterfaceDeclarationAccess().getUnorderedGroup_4_1());
						}
					)
				)
						)*
					)
				)
					{ 
					  getUnorderedGroupHelper().leave(grammarAccess.getInterfaceDeclarationAccess().getUnorderedGroup_4_1());
					}
			)
			otherlv_12=']'
			{
				newLeafNode(otherlv_12, grammarAccess.getInterfaceDeclarationAccess().getRightSquareBracketKeyword_4_2());
			}
		)?
		(
			otherlv_13=':'
			{
				newLeafNode(otherlv_13, grammarAccess.getInterfaceDeclarationAccess().getColonKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInterfaceDeclarationRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getInterfaceDeclarationAccess().getDerivesFromInterfaceDeclarationCrossReference_5_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_15=','
				{
					newLeafNode(otherlv_15, grammarAccess.getInterfaceDeclarationAccess().getCommaKeyword_5_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getInterfaceDeclarationRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getInterfaceDeclarationAccess().getDerivesFromInterfaceDeclarationCrossReference_5_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_17='{'
		{
			newLeafNode(otherlv_17, grammarAccess.getInterfaceDeclarationAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceDeclarationAccess().getContainsAbstractInterfaceComponentParserRuleCall_7_0());
				}
				lv_contains_18_0=ruleAbstractInterfaceComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceDeclarationRule());
					}
					add(
						$current,
						"contains",
						lv_contains_18_0,
						"com.btc.serviceidl.Idl.AbstractInterfaceComponent");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_19='}'
		{
			newLeafNode(otherlv_19, grammarAccess.getInterfaceDeclarationAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleAbstractInterfaceComponent
entryRuleAbstractInterfaceComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractInterfaceComponentRule()); }
	iv_ruleAbstractInterfaceComponent=ruleAbstractInterfaceComponent
	{ $current=$iv_ruleAbstractInterfaceComponent.current; }
	EOF;

// Rule AbstractInterfaceComponent
ruleAbstractInterfaceComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getAbstractInterfaceComponentAccess().getAbstractTypeDeclarationParserRuleCall_0_0());
			}
			this_AbstractTypeDeclaration_0=ruleAbstractTypeDeclaration
			{
				$current = $this_AbstractTypeDeclaration_0.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getAbstractInterfaceComponentAccess().getSemicolonKeyword_0_1());
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getAbstractInterfaceComponentAccess().getFunctionDeclarationParserRuleCall_1_0());
			}
			this_FunctionDeclaration_2=ruleFunctionDeclaration
			{
				$current = $this_FunctionDeclaration_2.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getAbstractInterfaceComponentAccess().getSemicolonKeyword_1_1());
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getAbstractInterfaceComponentAccess().getEventDeclarationParserRuleCall_2_0());
			}
			this_EventDeclaration_4=ruleEventDeclaration
			{
				$current = $this_EventDeclaration_4.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getAbstractInterfaceComponentAccess().getSemicolonKeyword_2_1());
			}
		)
	)
;

// Entry rule entryRuleFunctionDeclaration
entryRuleFunctionDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionDeclarationRule()); }
	iv_ruleFunctionDeclaration=ruleFunctionDeclaration
	{ $current=$iv_ruleFunctionDeclaration.current; }
	EOF;

// Rule FunctionDeclaration
ruleFunctionDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getDocCommentsDocCommentElementParserRuleCall_0_0());
				}
				lv_docComments_0_0=ruleDocCommentElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDeclarationRule());
					}
					add(
						$current,
						"docComments",
						lv_docComments_0_0,
						"com.btc.serviceidl.Idl.DocCommentElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				lv_sync_1_0='sync'
				{
					newLeafNode(lv_sync_1_0, grammarAccess.getFunctionDeclarationAccess().getSyncSyncKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionDeclarationRule());
					}
					setWithLastConsumed($current, "sync", true, "sync");
				}
			)
		)?
		(
			(
				lv_query_2_0='query'
				{
					newLeafNode(lv_query_2_0, grammarAccess.getFunctionDeclarationAccess().getQueryQueryKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionDeclarationRule());
					}
					setWithLastConsumed($current, "query", true, "query");
				}
			)
		)?
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getFunctionDeclarationAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getFunctionDeclarationAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getParametersParameterElementParserRuleCall_5_0_0());
					}
					lv_parameters_5_0=ruleParameterElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionDeclarationRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_5_0,
							"com.btc.serviceidl.Idl.ParameterElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getFunctionDeclarationAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getParametersParameterElementParserRuleCall_5_1_1_0());
						}
						lv_parameters_7_0=ruleParameterElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionDeclarationRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_7_0,
								"com.btc.serviceidl.Idl.ParameterElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getFunctionDeclarationAccess().getRightParenthesisKeyword_6());
		}
		(
			(
				otherlv_9='returns'
				{
					newLeafNode(otherlv_9, grammarAccess.getFunctionDeclarationAccess().getReturnsKeyword_7_0_0());
				}
				(
					(
						lv_injected_10_0='injectable'
						{
							newLeafNode(lv_injected_10_0, grammarAccess.getFunctionDeclarationAccess().getInjectedInjectableKeyword_7_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFunctionDeclarationRule());
							}
							setWithLastConsumed($current, "injected", true, "injectable");
						}
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getReturnedTypeReturnTypeElementParserRuleCall_7_0_2_0());
						}
						lv_returnedType_11_0=ruleReturnTypeElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionDeclarationRule());
							}
							set(
								$current,
								"returnedType",
								lv_returnedType_11_0,
								"com.btc.serviceidl.Idl.ReturnTypeElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_12='raises'
				{
					newLeafNode(otherlv_12, grammarAccess.getFunctionDeclarationAccess().getRaisesKeyword_7_1_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFunctionDeclarationRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getRaisedExceptionsAbstractExceptionCrossReference_7_1_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_14=','
					{
						newLeafNode(otherlv_14, grammarAccess.getFunctionDeclarationAccess().getCommaKeyword_7_1_2_0());
					}
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getFunctionDeclarationRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getRaisedExceptionsAbstractExceptionCrossReference_7_1_2_1_0());
							}
							ruleQualifiedName
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
		)
	)
;

// Entry rule entryRuleEventDeclaration
entryRuleEventDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventDeclarationRule()); }
	iv_ruleEventDeclaration=ruleEventDeclaration
	{ $current=$iv_ruleEventDeclaration.current; }
	EOF;

// Rule EventDeclaration
ruleEventDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='event'
		{
			newLeafNode(otherlv_0, grammarAccess.getEventDeclarationAccess().getEventKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEventDeclarationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEventDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		(
			otherlv_2='['
			{
				newLeafNode(otherlv_2, grammarAccess.getEventDeclarationAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				otherlv_3='guid'
				{
					newLeafNode(otherlv_3, grammarAccess.getEventDeclarationAccess().getGuidKeyword_2_1_0());
				}
				otherlv_4='='
				{
					newLeafNode(otherlv_4, grammarAccess.getEventDeclarationAccess().getEqualsSignKeyword_2_1_1());
				}
				(
					(
						lv_guid_5_0=RULE_UUID_LITERAL
						{
							newLeafNode(lv_guid_5_0, grammarAccess.getEventDeclarationAccess().getGuidUUID_LITERALTerminalRuleCall_2_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEventDeclarationRule());
							}
							setWithLastConsumed(
								$current,
								"guid",
								lv_guid_5_0,
								"com.btc.serviceidl.Idl.UUID_LITERAL");
						}
					)
				)
			)
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getEventDeclarationAccess().getRightSquareBracketKeyword_2_2());
			}
		)?
		otherlv_7='('
		{
			newLeafNode(otherlv_7, grammarAccess.getEventDeclarationAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEventDeclarationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getEventDeclarationAccess().getDataStructDeclarationCrossReference_4_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getEventDeclarationAccess().getRightParenthesisKeyword_5());
		}
		(
			(
				otherlv_10='subscribe'
				{
					newLeafNode(otherlv_10, grammarAccess.getEventDeclarationAccess().getSubscribeKeyword_6_0_0());
				}
				otherlv_11='with'
				{
					newLeafNode(otherlv_11, grammarAccess.getEventDeclarationAccess().getWithKeyword_6_0_1());
				}
				otherlv_12='('
				{
					newLeafNode(otherlv_12, grammarAccess.getEventDeclarationAccess().getLeftParenthesisKeyword_6_0_2());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getEventDeclarationAccess().getKeysKeyElementParserRuleCall_6_0_3_0_0());
							}
							lv_keys_13_0=ruleKeyElement
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getEventDeclarationRule());
								}
								add(
									$current,
									"keys",
									lv_keys_13_0,
									"com.btc.serviceidl.Idl.KeyElement");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_14=','
						{
							newLeafNode(otherlv_14, grammarAccess.getEventDeclarationAccess().getCommaKeyword_6_0_3_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getEventDeclarationAccess().getKeysKeyElementParserRuleCall_6_0_3_1_1_0());
								}
								lv_keys_15_0=ruleKeyElement
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getEventDeclarationRule());
									}
									add(
										$current,
										"keys",
										lv_keys_15_0,
										"com.btc.serviceidl.Idl.KeyElement");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)?
				otherlv_16=')'
				{
					newLeafNode(otherlv_16, grammarAccess.getEventDeclarationAccess().getRightParenthesisKeyword_6_0_4());
				}
			)?
			(
				otherlv_17='raises'
				{
					newLeafNode(otherlv_17, grammarAccess.getEventDeclarationAccess().getRaisesKeyword_6_1_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEventDeclarationRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getEventDeclarationAccess().getRaisedExceptionsAbstractExceptionCrossReference_6_1_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_19=','
					{
						newLeafNode(otherlv_19, grammarAccess.getEventDeclarationAccess().getCommaKeyword_6_1_2_0());
					}
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getEventDeclarationRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getEventDeclarationAccess().getRaisedExceptionsAbstractExceptionCrossReference_6_1_2_1_0());
							}
							ruleQualifiedName
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
		)
	)
;

// Entry rule entryRuleReturnTypeElement
entryRuleReturnTypeElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnTypeElementRule()); }
	iv_ruleReturnTypeElement=ruleReturnTypeElement
	{ $current=$iv_ruleReturnTypeElement.current; }
	EOF;

// Rule ReturnTypeElement
ruleReturnTypeElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getReturnTypeElementAccess().getAbstractTypeParserRuleCall_0());
		}
		this_AbstractType_0=ruleAbstractType
		{
			$current = $this_AbstractType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				lv_void_1_0='void'
				{
					newLeafNode(lv_void_1_0, grammarAccess.getReturnTypeElementAccess().getVoidVoidKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReturnTypeElementRule());
					}
					setWithLastConsumed($current, "void", true, "void");
				}
			)
		)
	)
;

// Entry rule entryRuleParameterElement
entryRuleParameterElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterElementRule()); }
	iv_ruleParameterElement=ruleParameterElement
	{ $current=$iv_ruleParameterElement.current; }
	EOF;

// Rule ParameterElement
ruleParameterElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterElementAccess().getDirectionParameterDirectionEnumRuleCall_0_0());
				}
				lv_direction_0_0=ruleParameterDirection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterElementRule());
					}
					set(
						$current,
						"direction",
						lv_direction_0_0,
						"com.btc.serviceidl.Idl.ParameterDirection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterElementAccess().getParamTypeAbstractTypeParserRuleCall_1_0());
				}
				lv_paramType_1_0=ruleAbstractType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterElementRule());
					}
					set(
						$current,
						"paramType",
						lv_paramType_1_0,
						"com.btc.serviceidl.Idl.AbstractType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_paramName_2_0=RULE_ID
				{
					newLeafNode(lv_paramName_2_0, grammarAccess.getParameterElementAccess().getParamNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterElementRule());
					}
					setWithLastConsumed(
						$current,
						"paramName",
						lv_paramName_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDocCommentElement
entryRuleDocCommentElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDocCommentElementRule()); }
	iv_ruleDocCommentElement=ruleDocCommentElement
	{ $current=$iv_ruleDocCommentElement.current; }
	EOF;

// Rule DocCommentElement
ruleDocCommentElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_text_0_1=RULE_SL_DOC_COMMENT
				{
					newLeafNode(lv_text_0_1, grammarAccess.getDocCommentElementAccess().getTextSL_DOC_COMMENTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDocCommentElementRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_0_1,
						"com.btc.serviceidl.Idl.SL_DOC_COMMENT");
				}
				    |
				lv_text_0_2=RULE_ML_DOC_COMMENT
				{
					newLeafNode(lv_text_0_2, grammarAccess.getDocCommentElementAccess().getTextML_DOC_COMMENTTerminalRuleCall_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDocCommentElementRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_0_2,
						"com.btc.serviceidl.Idl.ML_DOC_COMMENT");
				}
			)
		)
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); }
	iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard
	{ $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }
	EOF;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
		}
		this_QualifiedName_0=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1());
			}
		)?
	)
;

// Entry rule entryRulePrimitiveType
entryRulePrimitiveType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveTypeRule()); }
	iv_rulePrimitiveType=rulePrimitiveType
	{ $current=$iv_rulePrimitiveType.current; }
	EOF;

// Rule PrimitiveType
rulePrimitiveType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimitiveTypeAccess().getIntegerTypeIntegerTypeParserRuleCall_0_0());
				}
				lv_integerType_0_0=ruleIntegerType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimitiveTypeRule());
					}
					set(
						$current,
						"integerType",
						lv_integerType_0_0,
						"com.btc.serviceidl.Idl.IntegerType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_stringType_1_0=RULE_STRINGTYPE
				{
					newLeafNode(lv_stringType_1_0, grammarAccess.getPrimitiveTypeAccess().getStringTypeSTRINGTYPETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveTypeRule());
					}
					setWithLastConsumed(
						$current,
						"stringType",
						lv_stringType_1_0,
						"com.btc.serviceidl.Idl.STRINGTYPE");
				}
			)
		)
		    |
		(
			(
				lv_charType_2_0=RULE_CHAR
				{
					newLeafNode(lv_charType_2_0, grammarAccess.getPrimitiveTypeAccess().getCharTypeCHARTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveTypeRule());
					}
					setWithLastConsumed(
						$current,
						"charType",
						lv_charType_2_0,
						"com.btc.serviceidl.Idl.CHAR");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimitiveTypeAccess().getFloatingPointTypeFloatingPointTypeParserRuleCall_3_0());
				}
				lv_floatingPointType_3_0=ruleFloatingPointType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimitiveTypeRule());
					}
					set(
						$current,
						"floatingPointType",
						lv_floatingPointType_3_0,
						"com.btc.serviceidl.Idl.FloatingPointType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_uuidType_4_0=RULE_UUID
				{
					newLeafNode(lv_uuidType_4_0, grammarAccess.getPrimitiveTypeAccess().getUuidTypeUUIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveTypeRule());
					}
					setWithLastConsumed(
						$current,
						"uuidType",
						lv_uuidType_4_0,
						"com.btc.serviceidl.Idl.UUID");
				}
			)
		)
		    |
		(
			(
				lv_booleanType_5_0=RULE_BOOLEAN
				{
					newLeafNode(lv_booleanType_5_0, grammarAccess.getPrimitiveTypeAccess().getBooleanTypeBOOLEANTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveTypeRule());
					}
					setWithLastConsumed(
						$current,
						"booleanType",
						lv_booleanType_5_0,
						"com.btc.serviceidl.Idl.BOOLEAN");
				}
			)
		)
	)
;

// Entry rule entryRuleIntegerType
entryRuleIntegerType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIntegerTypeRule()); }
	iv_ruleIntegerType=ruleIntegerType
	{ $current=$iv_ruleIntegerType.current.getText(); }
	EOF;

// Rule IntegerType
ruleIntegerType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_BYTE_0=RULE_BYTE
		{
			$current.merge(this_BYTE_0);
		}
		{
			newLeafNode(this_BYTE_0, grammarAccess.getIntegerTypeAccess().getBYTETerminalRuleCall_0());
		}
		    |
		this_INT16_1=RULE_INT16
		{
			$current.merge(this_INT16_1);
		}
		{
			newLeafNode(this_INT16_1, grammarAccess.getIntegerTypeAccess().getINT16TerminalRuleCall_1());
		}
		    |
		this_INT32_2=RULE_INT32
		{
			$current.merge(this_INT32_2);
		}
		{
			newLeafNode(this_INT32_2, grammarAccess.getIntegerTypeAccess().getINT32TerminalRuleCall_2());
		}
		    |
		this_INT64_3=RULE_INT64
		{
			$current.merge(this_INT64_3);
		}
		{
			newLeafNode(this_INT64_3, grammarAccess.getIntegerTypeAccess().getINT64TerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleFloatingPointType
entryRuleFloatingPointType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFloatingPointTypeRule()); }
	iv_ruleFloatingPointType=ruleFloatingPointType
	{ $current=$iv_ruleFloatingPointType.current.getText(); }
	EOF;

// Rule FloatingPointType
ruleFloatingPointType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_FLOAT_0=RULE_FLOAT
		{
			$current.merge(this_FLOAT_0);
		}
		{
			newLeafNode(this_FLOAT_0, grammarAccess.getFloatingPointTypeAccess().getFLOATTerminalRuleCall_0());
		}
		    |
		this_DOUBLE_1=RULE_DOUBLE
		{
			$current.merge(this_DOUBLE_1);
		}
		{
			newLeafNode(this_DOUBLE_1, grammarAccess.getFloatingPointTypeAccess().getDOUBLETerminalRuleCall_1());
		}
	)
;

// Rule ParameterDirection
ruleParameterDirection returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='in'
			{
				$current = grammarAccess.getParameterDirectionAccess().getPARAM_INEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getParameterDirectionAccess().getPARAM_INEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='out'
			{
				$current = grammarAccess.getParameterDirectionAccess().getPARAM_OUTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getParameterDirectionAccess().getPARAM_OUTEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_BYTE : 'byte';

RULE_INT16 : 'int16';

RULE_INT32 : 'int32';

RULE_INT64 : 'int64';

RULE_CHAR : 'char';

RULE_STRINGTYPE : 'string';

RULE_FLOAT : 'float';

RULE_DOUBLE : 'double';

RULE_BOOLEAN : 'boolean';

RULE_UUID : 'uuid';

RULE_VERSION : RULE_INT '.' RULE_INT '.' RULE_INT;

RULE_UUID_LITERAL : RULE_HEX RULE_HEX RULE_HEX RULE_HEX RULE_HEX RULE_HEX RULE_HEX RULE_HEX '-' RULE_HEX RULE_HEX RULE_HEX RULE_HEX '-' RULE_HEX RULE_HEX RULE_HEX RULE_HEX '-' RULE_HEX RULE_HEX RULE_HEX RULE_HEX '-' RULE_HEX RULE_HEX RULE_HEX RULE_HEX RULE_HEX RULE_HEX RULE_HEX RULE_HEX RULE_HEX RULE_HEX RULE_HEX RULE_HEX;

RULE_ML_DOC_COMMENT : '<#' ( options {greedy=false;} : . )*'#>';

RULE_SL_DOC_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

fragment RULE_HEX : ('0'..'9'|'a'..'f'|'A'..'F');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
