/**
 * generated by Xtext 2.13.0
 */
package com.btc.serviceidl.idl;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Abstract Type</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link com.btc.serviceidl.idl.AbstractType#getPrimitiveType <em>Primitive Type</em>}</li>
 *   <li>{@link com.btc.serviceidl.idl.AbstractType#getReferenceType <em>Reference Type</em>}</li>
 *   <li>{@link com.btc.serviceidl.idl.AbstractType#getCollectionType <em>Collection Type</em>}</li>
 * </ul>
 *
 * @see com.btc.serviceidl.idl.IdlPackage#getAbstractType()
 * @model
 * @generated
 */
public interface AbstractType extends ReturnTypeElement
{
  /**
   * Returns the value of the '<em><b>Primitive Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Primitive Type</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Primitive Type</em>' containment reference.
   * @see #setPrimitiveType(PrimitiveType)
   * @see com.btc.serviceidl.idl.IdlPackage#getAbstractType_PrimitiveType()
   * @model containment="true"
   * @generated
   */
  PrimitiveType getPrimitiveType();

  /**
   * Sets the value of the '{@link com.btc.serviceidl.idl.AbstractType#getPrimitiveType <em>Primitive Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Primitive Type</em>' containment reference.
   * @see #getPrimitiveType()
   * @generated
   */
  void setPrimitiveType(PrimitiveType value);

  /**
   * Returns the value of the '<em><b>Reference Type</b></em>' reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Reference Type</em>' reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Reference Type</em>' reference.
   * @see #setReferenceType(AbstractCrossReference)
   * @see com.btc.serviceidl.idl.IdlPackage#getAbstractType_ReferenceType()
   * @model
   * @generated
   */
  AbstractCrossReference getReferenceType();

  /**
   * Sets the value of the '{@link com.btc.serviceidl.idl.AbstractType#getReferenceType <em>Reference Type</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Reference Type</em>' reference.
   * @see #getReferenceType()
   * @generated
   */
  void setReferenceType(AbstractCrossReference value);

  /**
   * Returns the value of the '<em><b>Collection Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Collection Type</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Collection Type</em>' containment reference.
   * @see #setCollectionType(AbstractCollection)
   * @see com.btc.serviceidl.idl.IdlPackage#getAbstractType_CollectionType()
   * @model containment="true"
   * @generated
   */
  AbstractCollection getCollectionType();

  /**
   * Sets the value of the '{@link com.btc.serviceidl.idl.AbstractType#getCollectionType <em>Collection Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Collection Type</em>' containment reference.
   * @see #getCollectionType()
   * @generated
   */
  void setCollectionType(AbstractCollection value);

} // AbstractType
