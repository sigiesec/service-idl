/**
 * generated by Xtext 2.13.0
 */
package com.btc.serviceidl.idl;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Sequence Declaration</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link com.btc.serviceidl.idl.SequenceDeclaration#getType <em>Type</em>}</li>
 *   <li>{@link com.btc.serviceidl.idl.SequenceDeclaration#isFailable <em>Failable</em>}</li>
 *   <li>{@link com.btc.serviceidl.idl.SequenceDeclaration#getRaisedExceptions <em>Raised Exceptions</em>}</li>
 *   <li>{@link com.btc.serviceidl.idl.SequenceDeclaration#getSequenceHints <em>Sequence Hints</em>}</li>
 * </ul>
 *
 * @see com.btc.serviceidl.idl.IdlPackage#getSequenceDeclaration()
 * @model
 * @generated
 */
public interface SequenceDeclaration extends AbstractCollection
{
  /**
   * Returns the value of the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Type</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Type</em>' containment reference.
   * @see #setType(AbstractType)
   * @see com.btc.serviceidl.idl.IdlPackage#getSequenceDeclaration_Type()
   * @model containment="true"
   * @generated
   */
  AbstractType getType();

  /**
   * Sets the value of the '{@link com.btc.serviceidl.idl.SequenceDeclaration#getType <em>Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Type</em>' containment reference.
   * @see #getType()
   * @generated
   */
  void setType(AbstractType value);

  /**
   * Returns the value of the '<em><b>Failable</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Failable</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Failable</em>' attribute.
   * @see #setFailable(boolean)
   * @see com.btc.serviceidl.idl.IdlPackage#getSequenceDeclaration_Failable()
   * @model
   * @generated
   */
  boolean isFailable();

  /**
   * Sets the value of the '{@link com.btc.serviceidl.idl.SequenceDeclaration#isFailable <em>Failable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Failable</em>' attribute.
   * @see #isFailable()
   * @generated
   */
  void setFailable(boolean value);

  /**
   * Returns the value of the '<em><b>Raised Exceptions</b></em>' reference list.
   * The list contents are of type {@link com.btc.serviceidl.idl.AbstractException}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Raised Exceptions</em>' reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Raised Exceptions</em>' reference list.
   * @see com.btc.serviceidl.idl.IdlPackage#getSequenceDeclaration_RaisedExceptions()
   * @model
   * @generated
   */
  EList<AbstractException> getRaisedExceptions();

  /**
   * Returns the value of the '<em><b>Sequence Hints</b></em>' containment reference list.
   * The list contents are of type {@link com.btc.serviceidl.idl.AbstractSequenceHint}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Sequence Hints</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Sequence Hints</em>' containment reference list.
   * @see com.btc.serviceidl.idl.IdlPackage#getSequenceDeclaration_SequenceHints()
   * @model containment="true"
   * @generated
   */
  EList<AbstractSequenceHint> getSequenceHints();

} // SequenceDeclaration
