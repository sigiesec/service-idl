/**
 * generated by Xtext 2.13.0
 */
package com.btc.serviceidl.idl.impl;

import com.btc.serviceidl.idl.AbstractType;
import com.btc.serviceidl.idl.IdlPackage;
import com.btc.serviceidl.idl.ParameterDirection;
import com.btc.serviceidl.idl.ParameterElement;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Parameter Element</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.btc.serviceidl.idl.impl.ParameterElementImpl#getDirection <em>Direction</em>}</li>
 *   <li>{@link com.btc.serviceidl.idl.impl.ParameterElementImpl#getParamType <em>Param Type</em>}</li>
 *   <li>{@link com.btc.serviceidl.idl.impl.ParameterElementImpl#getParamName <em>Param Name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ParameterElementImpl extends MinimalEObjectImpl.Container implements ParameterElement
{
  /**
   * The default value of the '{@link #getDirection() <em>Direction</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDirection()
   * @generated
   * @ordered
   */
  protected static final ParameterDirection DIRECTION_EDEFAULT = ParameterDirection.PARAM_IN;

  /**
   * The cached value of the '{@link #getDirection() <em>Direction</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDirection()
   * @generated
   * @ordered
   */
  protected ParameterDirection direction = DIRECTION_EDEFAULT;

  /**
   * The cached value of the '{@link #getParamType() <em>Param Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParamType()
   * @generated
   * @ordered
   */
  protected AbstractType paramType;

  /**
   * The default value of the '{@link #getParamName() <em>Param Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParamName()
   * @generated
   * @ordered
   */
  protected static final String PARAM_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getParamName() <em>Param Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParamName()
   * @generated
   * @ordered
   */
  protected String paramName = PARAM_NAME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ParameterElementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return IdlPackage.Literals.PARAMETER_ELEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ParameterDirection getDirection()
  {
    return direction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDirection(ParameterDirection newDirection)
  {
    ParameterDirection oldDirection = direction;
    direction = newDirection == null ? DIRECTION_EDEFAULT : newDirection;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IdlPackage.PARAMETER_ELEMENT__DIRECTION, oldDirection, direction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AbstractType getParamType()
  {
    return paramType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetParamType(AbstractType newParamType, NotificationChain msgs)
  {
    AbstractType oldParamType = paramType;
    paramType = newParamType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IdlPackage.PARAMETER_ELEMENT__PARAM_TYPE, oldParamType, newParamType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setParamType(AbstractType newParamType)
  {
    if (newParamType != paramType)
    {
      NotificationChain msgs = null;
      if (paramType != null)
        msgs = ((InternalEObject)paramType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IdlPackage.PARAMETER_ELEMENT__PARAM_TYPE, null, msgs);
      if (newParamType != null)
        msgs = ((InternalEObject)newParamType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IdlPackage.PARAMETER_ELEMENT__PARAM_TYPE, null, msgs);
      msgs = basicSetParamType(newParamType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IdlPackage.PARAMETER_ELEMENT__PARAM_TYPE, newParamType, newParamType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getParamName()
  {
    return paramName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setParamName(String newParamName)
  {
    String oldParamName = paramName;
    paramName = newParamName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IdlPackage.PARAMETER_ELEMENT__PARAM_NAME, oldParamName, paramName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case IdlPackage.PARAMETER_ELEMENT__PARAM_TYPE:
        return basicSetParamType(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case IdlPackage.PARAMETER_ELEMENT__DIRECTION:
        return getDirection();
      case IdlPackage.PARAMETER_ELEMENT__PARAM_TYPE:
        return getParamType();
      case IdlPackage.PARAMETER_ELEMENT__PARAM_NAME:
        return getParamName();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case IdlPackage.PARAMETER_ELEMENT__DIRECTION:
        setDirection((ParameterDirection)newValue);
        return;
      case IdlPackage.PARAMETER_ELEMENT__PARAM_TYPE:
        setParamType((AbstractType)newValue);
        return;
      case IdlPackage.PARAMETER_ELEMENT__PARAM_NAME:
        setParamName((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case IdlPackage.PARAMETER_ELEMENT__DIRECTION:
        setDirection(DIRECTION_EDEFAULT);
        return;
      case IdlPackage.PARAMETER_ELEMENT__PARAM_TYPE:
        setParamType((AbstractType)null);
        return;
      case IdlPackage.PARAMETER_ELEMENT__PARAM_NAME:
        setParamName(PARAM_NAME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case IdlPackage.PARAMETER_ELEMENT__DIRECTION:
        return direction != DIRECTION_EDEFAULT;
      case IdlPackage.PARAMETER_ELEMENT__PARAM_TYPE:
        return paramType != null;
      case IdlPackage.PARAMETER_ELEMENT__PARAM_NAME:
        return PARAM_NAME_EDEFAULT == null ? paramName != null : !PARAM_NAME_EDEFAULT.equals(paramName);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (direction: ");
    result.append(direction);
    result.append(", paramName: ");
    result.append(paramName);
    result.append(')');
    return result.toString();
  }

} //ParameterElementImpl
