/**
 * generated by Xtext 2.13.0
 */
package com.btc.serviceidl.idl.impl;

import com.btc.serviceidl.idl.AbstractException;
import com.btc.serviceidl.idl.EventDeclaration;
import com.btc.serviceidl.idl.IdlPackage;
import com.btc.serviceidl.idl.KeyElement;
import com.btc.serviceidl.idl.StructDeclaration;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Event Declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.btc.serviceidl.idl.impl.EventDeclarationImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.btc.serviceidl.idl.impl.EventDeclarationImpl#getGuid <em>Guid</em>}</li>
 *   <li>{@link com.btc.serviceidl.idl.impl.EventDeclarationImpl#getData <em>Data</em>}</li>
 *   <li>{@link com.btc.serviceidl.idl.impl.EventDeclarationImpl#getKeys <em>Keys</em>}</li>
 *   <li>{@link com.btc.serviceidl.idl.impl.EventDeclarationImpl#getRaisedExceptions <em>Raised Exceptions</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EventDeclarationImpl extends AbstractInterfaceComponentImpl implements EventDeclaration
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getGuid() <em>Guid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGuid()
   * @generated
   * @ordered
   */
  protected static final String GUID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getGuid() <em>Guid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGuid()
   * @generated
   * @ordered
   */
  protected String guid = GUID_EDEFAULT;

  /**
   * The cached value of the '{@link #getData() <em>Data</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getData()
   * @generated
   * @ordered
   */
  protected StructDeclaration data;

  /**
   * The cached value of the '{@link #getKeys() <em>Keys</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKeys()
   * @generated
   * @ordered
   */
  protected EList<KeyElement> keys;

  /**
   * The cached value of the '{@link #getRaisedExceptions() <em>Raised Exceptions</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRaisedExceptions()
   * @generated
   * @ordered
   */
  protected EList<AbstractException> raisedExceptions;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EventDeclarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return IdlPackage.Literals.EVENT_DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IdlPackage.EVENT_DECLARATION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getGuid()
  {
    return guid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGuid(String newGuid)
  {
    String oldGuid = guid;
    guid = newGuid;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IdlPackage.EVENT_DECLARATION__GUID, oldGuid, guid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StructDeclaration getData()
  {
    if (data != null && data.eIsProxy())
    {
      InternalEObject oldData = (InternalEObject)data;
      data = (StructDeclaration)eResolveProxy(oldData);
      if (data != oldData)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, IdlPackage.EVENT_DECLARATION__DATA, oldData, data));
      }
    }
    return data;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StructDeclaration basicGetData()
  {
    return data;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setData(StructDeclaration newData)
  {
    StructDeclaration oldData = data;
    data = newData;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IdlPackage.EVENT_DECLARATION__DATA, oldData, data));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<KeyElement> getKeys()
  {
    if (keys == null)
    {
      keys = new EObjectContainmentEList<KeyElement>(KeyElement.class, this, IdlPackage.EVENT_DECLARATION__KEYS);
    }
    return keys;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<AbstractException> getRaisedExceptions()
  {
    if (raisedExceptions == null)
    {
      raisedExceptions = new EObjectResolvingEList<AbstractException>(AbstractException.class, this, IdlPackage.EVENT_DECLARATION__RAISED_EXCEPTIONS);
    }
    return raisedExceptions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case IdlPackage.EVENT_DECLARATION__KEYS:
        return ((InternalEList<?>)getKeys()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case IdlPackage.EVENT_DECLARATION__NAME:
        return getName();
      case IdlPackage.EVENT_DECLARATION__GUID:
        return getGuid();
      case IdlPackage.EVENT_DECLARATION__DATA:
        if (resolve) return getData();
        return basicGetData();
      case IdlPackage.EVENT_DECLARATION__KEYS:
        return getKeys();
      case IdlPackage.EVENT_DECLARATION__RAISED_EXCEPTIONS:
        return getRaisedExceptions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case IdlPackage.EVENT_DECLARATION__NAME:
        setName((String)newValue);
        return;
      case IdlPackage.EVENT_DECLARATION__GUID:
        setGuid((String)newValue);
        return;
      case IdlPackage.EVENT_DECLARATION__DATA:
        setData((StructDeclaration)newValue);
        return;
      case IdlPackage.EVENT_DECLARATION__KEYS:
        getKeys().clear();
        getKeys().addAll((Collection<? extends KeyElement>)newValue);
        return;
      case IdlPackage.EVENT_DECLARATION__RAISED_EXCEPTIONS:
        getRaisedExceptions().clear();
        getRaisedExceptions().addAll((Collection<? extends AbstractException>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case IdlPackage.EVENT_DECLARATION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case IdlPackage.EVENT_DECLARATION__GUID:
        setGuid(GUID_EDEFAULT);
        return;
      case IdlPackage.EVENT_DECLARATION__DATA:
        setData((StructDeclaration)null);
        return;
      case IdlPackage.EVENT_DECLARATION__KEYS:
        getKeys().clear();
        return;
      case IdlPackage.EVENT_DECLARATION__RAISED_EXCEPTIONS:
        getRaisedExceptions().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case IdlPackage.EVENT_DECLARATION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case IdlPackage.EVENT_DECLARATION__GUID:
        return GUID_EDEFAULT == null ? guid != null : !GUID_EDEFAULT.equals(guid);
      case IdlPackage.EVENT_DECLARATION__DATA:
        return data != null;
      case IdlPackage.EVENT_DECLARATION__KEYS:
        return keys != null && !keys.isEmpty();
      case IdlPackage.EVENT_DECLARATION__RAISED_EXCEPTIONS:
        return raisedExceptions != null && !raisedExceptions.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", guid: ");
    result.append(guid);
    result.append(')');
    return result.toString();
  }

} //EventDeclarationImpl
