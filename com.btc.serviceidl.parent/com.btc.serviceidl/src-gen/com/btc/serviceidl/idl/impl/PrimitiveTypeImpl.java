/**
 * generated by Xtext 2.13.0
 */
package com.btc.serviceidl.idl.impl;

import com.btc.serviceidl.idl.IdlPackage;
import com.btc.serviceidl.idl.PrimitiveType;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Primitive Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.btc.serviceidl.idl.impl.PrimitiveTypeImpl#getIntegerType <em>Integer Type</em>}</li>
 *   <li>{@link com.btc.serviceidl.idl.impl.PrimitiveTypeImpl#getStringType <em>String Type</em>}</li>
 *   <li>{@link com.btc.serviceidl.idl.impl.PrimitiveTypeImpl#getCharType <em>Char Type</em>}</li>
 *   <li>{@link com.btc.serviceidl.idl.impl.PrimitiveTypeImpl#getFloatingPointType <em>Floating Point Type</em>}</li>
 *   <li>{@link com.btc.serviceidl.idl.impl.PrimitiveTypeImpl#getUuidType <em>Uuid Type</em>}</li>
 *   <li>{@link com.btc.serviceidl.idl.impl.PrimitiveTypeImpl#getBooleanType <em>Boolean Type</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PrimitiveTypeImpl extends MinimalEObjectImpl.Container implements PrimitiveType
{
  /**
   * The default value of the '{@link #getIntegerType() <em>Integer Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIntegerType()
   * @generated
   * @ordered
   */
  protected static final String INTEGER_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIntegerType() <em>Integer Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIntegerType()
   * @generated
   * @ordered
   */
  protected String integerType = INTEGER_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getStringType() <em>String Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStringType()
   * @generated
   * @ordered
   */
  protected static final String STRING_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStringType() <em>String Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStringType()
   * @generated
   * @ordered
   */
  protected String stringType = STRING_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getCharType() <em>Char Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCharType()
   * @generated
   * @ordered
   */
  protected static final String CHAR_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCharType() <em>Char Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCharType()
   * @generated
   * @ordered
   */
  protected String charType = CHAR_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getFloatingPointType() <em>Floating Point Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFloatingPointType()
   * @generated
   * @ordered
   */
  protected static final String FLOATING_POINT_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFloatingPointType() <em>Floating Point Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFloatingPointType()
   * @generated
   * @ordered
   */
  protected String floatingPointType = FLOATING_POINT_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getUuidType() <em>Uuid Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUuidType()
   * @generated
   * @ordered
   */
  protected static final String UUID_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUuidType() <em>Uuid Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUuidType()
   * @generated
   * @ordered
   */
  protected String uuidType = UUID_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getBooleanType() <em>Boolean Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBooleanType()
   * @generated
   * @ordered
   */
  protected static final String BOOLEAN_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBooleanType() <em>Boolean Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBooleanType()
   * @generated
   * @ordered
   */
  protected String booleanType = BOOLEAN_TYPE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PrimitiveTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return IdlPackage.Literals.PRIMITIVE_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getIntegerType()
  {
    return integerType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIntegerType(String newIntegerType)
  {
    String oldIntegerType = integerType;
    integerType = newIntegerType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IdlPackage.PRIMITIVE_TYPE__INTEGER_TYPE, oldIntegerType, integerType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getStringType()
  {
    return stringType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStringType(String newStringType)
  {
    String oldStringType = stringType;
    stringType = newStringType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IdlPackage.PRIMITIVE_TYPE__STRING_TYPE, oldStringType, stringType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getCharType()
  {
    return charType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCharType(String newCharType)
  {
    String oldCharType = charType;
    charType = newCharType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IdlPackage.PRIMITIVE_TYPE__CHAR_TYPE, oldCharType, charType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFloatingPointType()
  {
    return floatingPointType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFloatingPointType(String newFloatingPointType)
  {
    String oldFloatingPointType = floatingPointType;
    floatingPointType = newFloatingPointType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IdlPackage.PRIMITIVE_TYPE__FLOATING_POINT_TYPE, oldFloatingPointType, floatingPointType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getUuidType()
  {
    return uuidType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUuidType(String newUuidType)
  {
    String oldUuidType = uuidType;
    uuidType = newUuidType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IdlPackage.PRIMITIVE_TYPE__UUID_TYPE, oldUuidType, uuidType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getBooleanType()
  {
    return booleanType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBooleanType(String newBooleanType)
  {
    String oldBooleanType = booleanType;
    booleanType = newBooleanType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IdlPackage.PRIMITIVE_TYPE__BOOLEAN_TYPE, oldBooleanType, booleanType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case IdlPackage.PRIMITIVE_TYPE__INTEGER_TYPE:
        return getIntegerType();
      case IdlPackage.PRIMITIVE_TYPE__STRING_TYPE:
        return getStringType();
      case IdlPackage.PRIMITIVE_TYPE__CHAR_TYPE:
        return getCharType();
      case IdlPackage.PRIMITIVE_TYPE__FLOATING_POINT_TYPE:
        return getFloatingPointType();
      case IdlPackage.PRIMITIVE_TYPE__UUID_TYPE:
        return getUuidType();
      case IdlPackage.PRIMITIVE_TYPE__BOOLEAN_TYPE:
        return getBooleanType();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case IdlPackage.PRIMITIVE_TYPE__INTEGER_TYPE:
        setIntegerType((String)newValue);
        return;
      case IdlPackage.PRIMITIVE_TYPE__STRING_TYPE:
        setStringType((String)newValue);
        return;
      case IdlPackage.PRIMITIVE_TYPE__CHAR_TYPE:
        setCharType((String)newValue);
        return;
      case IdlPackage.PRIMITIVE_TYPE__FLOATING_POINT_TYPE:
        setFloatingPointType((String)newValue);
        return;
      case IdlPackage.PRIMITIVE_TYPE__UUID_TYPE:
        setUuidType((String)newValue);
        return;
      case IdlPackage.PRIMITIVE_TYPE__BOOLEAN_TYPE:
        setBooleanType((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case IdlPackage.PRIMITIVE_TYPE__INTEGER_TYPE:
        setIntegerType(INTEGER_TYPE_EDEFAULT);
        return;
      case IdlPackage.PRIMITIVE_TYPE__STRING_TYPE:
        setStringType(STRING_TYPE_EDEFAULT);
        return;
      case IdlPackage.PRIMITIVE_TYPE__CHAR_TYPE:
        setCharType(CHAR_TYPE_EDEFAULT);
        return;
      case IdlPackage.PRIMITIVE_TYPE__FLOATING_POINT_TYPE:
        setFloatingPointType(FLOATING_POINT_TYPE_EDEFAULT);
        return;
      case IdlPackage.PRIMITIVE_TYPE__UUID_TYPE:
        setUuidType(UUID_TYPE_EDEFAULT);
        return;
      case IdlPackage.PRIMITIVE_TYPE__BOOLEAN_TYPE:
        setBooleanType(BOOLEAN_TYPE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case IdlPackage.PRIMITIVE_TYPE__INTEGER_TYPE:
        return INTEGER_TYPE_EDEFAULT == null ? integerType != null : !INTEGER_TYPE_EDEFAULT.equals(integerType);
      case IdlPackage.PRIMITIVE_TYPE__STRING_TYPE:
        return STRING_TYPE_EDEFAULT == null ? stringType != null : !STRING_TYPE_EDEFAULT.equals(stringType);
      case IdlPackage.PRIMITIVE_TYPE__CHAR_TYPE:
        return CHAR_TYPE_EDEFAULT == null ? charType != null : !CHAR_TYPE_EDEFAULT.equals(charType);
      case IdlPackage.PRIMITIVE_TYPE__FLOATING_POINT_TYPE:
        return FLOATING_POINT_TYPE_EDEFAULT == null ? floatingPointType != null : !FLOATING_POINT_TYPE_EDEFAULT.equals(floatingPointType);
      case IdlPackage.PRIMITIVE_TYPE__UUID_TYPE:
        return UUID_TYPE_EDEFAULT == null ? uuidType != null : !UUID_TYPE_EDEFAULT.equals(uuidType);
      case IdlPackage.PRIMITIVE_TYPE__BOOLEAN_TYPE:
        return BOOLEAN_TYPE_EDEFAULT == null ? booleanType != null : !BOOLEAN_TYPE_EDEFAULT.equals(booleanType);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (integerType: ");
    result.append(integerType);
    result.append(", stringType: ");
    result.append(stringType);
    result.append(", charType: ");
    result.append(charType);
    result.append(", floatingPointType: ");
    result.append(floatingPointType);
    result.append(", uuidType: ");
    result.append(uuidType);
    result.append(", booleanType: ");
    result.append(booleanType);
    result.append(')');
    return result.toString();
  }

} //PrimitiveTypeImpl
