/**
 * generated by Xtext 2.13.0
 */
package com.btc.serviceidl.idl.impl;

import com.btc.serviceidl.idl.AbstractCollection;
import com.btc.serviceidl.idl.AbstractCrossReference;
import com.btc.serviceidl.idl.AbstractException;
import com.btc.serviceidl.idl.AbstractInterfaceComponent;
import com.btc.serviceidl.idl.AbstractModuleComponent;
import com.btc.serviceidl.idl.AbstractSequenceHint;
import com.btc.serviceidl.idl.AbstractType;
import com.btc.serviceidl.idl.AbstractTypeDeclaration;
import com.btc.serviceidl.idl.AliasDeclaration;
import com.btc.serviceidl.idl.DocCommentElement;
import com.btc.serviceidl.idl.EnumDeclaration;
import com.btc.serviceidl.idl.EventDeclaration;
import com.btc.serviceidl.idl.ExceptionDeclaration;
import com.btc.serviceidl.idl.ExceptionReferenceDeclaration;
import com.btc.serviceidl.idl.FunctionDeclaration;
import com.btc.serviceidl.idl.IDLSpecification;
import com.btc.serviceidl.idl.IdlFactory;
import com.btc.serviceidl.idl.IdlPackage;
import com.btc.serviceidl.idl.ImportDeclaration;
import com.btc.serviceidl.idl.InterfaceDeclaration;
import com.btc.serviceidl.idl.KeyElement;
import com.btc.serviceidl.idl.MemberElement;
import com.btc.serviceidl.idl.ModuleDeclaration;
import com.btc.serviceidl.idl.ParameterDirection;
import com.btc.serviceidl.idl.ParameterElement;
import com.btc.serviceidl.idl.PrimitiveType;
import com.btc.serviceidl.idl.ReturnTypeElement;
import com.btc.serviceidl.idl.SequenceDeclaration;
import com.btc.serviceidl.idl.StructDeclaration;
import com.btc.serviceidl.idl.TupleDeclaration;
import com.btc.serviceidl.idl.TypicalLengthHint;
import com.btc.serviceidl.idl.TypicalSizeHint;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class IdlPackageImpl extends EPackageImpl implements IdlPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass idlSpecificationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass importDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass moduleDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstractModuleComponentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstractExceptionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exceptionReferenceDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exceptionDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstractTypeDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstractCrossReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstractTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aliasDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstractCollectionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sequenceDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstractSequenceHintEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typicalLengthHintEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typicalSizeHintEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tupleDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass structDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass memberElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass keyElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass interfaceDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstractInterfaceComponentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass functionDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eventDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass returnTypeElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parameterElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass docCommentElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass primitiveTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum parameterDirectionEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see com.btc.serviceidl.idl.IdlPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private IdlPackageImpl()
  {
    super(eNS_URI, IdlFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link IdlPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static IdlPackage init()
  {
    if (isInited) return (IdlPackage)EPackage.Registry.INSTANCE.getEPackage(IdlPackage.eNS_URI);

    // Obtain or create and register package
    IdlPackageImpl theIdlPackage = (IdlPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof IdlPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new IdlPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theIdlPackage.createPackageContents();

    // Initialize created meta-data
    theIdlPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theIdlPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(IdlPackage.eNS_URI, theIdlPackage);
    return theIdlPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getIDLSpecification()
  {
    return idlSpecificationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getIDLSpecification_ImportedEntities()
  {
    return (EReference)idlSpecificationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getIDLSpecification_Modules()
  {
    return (EReference)idlSpecificationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getImportDeclaration()
  {
    return importDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getImportDeclaration_ImportedNamespace()
  {
    return (EAttribute)importDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getModuleDeclaration()
  {
    return moduleDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getModuleDeclaration_Virtual()
  {
    return (EAttribute)moduleDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getModuleDeclaration_Main()
  {
    return (EAttribute)moduleDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getModuleDeclaration_Name()
  {
    return (EAttribute)moduleDeclarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModuleDeclaration_ModuleComponents()
  {
    return (EReference)moduleDeclarationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModuleDeclaration_NestedModules()
  {
    return (EReference)moduleDeclarationEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAbstractModuleComponent()
  {
    return abstractModuleComponentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAbstractException()
  {
    return abstractExceptionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAbstractException_Name()
  {
    return (EAttribute)abstractExceptionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getExceptionReferenceDeclaration()
  {
    return exceptionReferenceDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getExceptionReferenceDeclaration_Location()
  {
    return (EAttribute)exceptionReferenceDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getExceptionDeclaration()
  {
    return exceptionDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getExceptionDeclaration_Supertype()
  {
    return (EReference)exceptionDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getExceptionDeclaration_Members()
  {
    return (EReference)exceptionDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAbstractTypeDeclaration()
  {
    return abstractTypeDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAbstractCrossReference()
  {
    return abstractCrossReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAbstractType()
  {
    return abstractTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAbstractType_PrimitiveType()
  {
    return (EReference)abstractTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAbstractType_ReferenceType()
  {
    return (EReference)abstractTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAbstractType_CollectionType()
  {
    return (EReference)abstractTypeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAliasDeclaration()
  {
    return aliasDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAliasDeclaration_Type()
  {
    return (EReference)aliasDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAliasDeclaration_Name()
  {
    return (EAttribute)aliasDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getEnumDeclaration()
  {
    return enumDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getEnumDeclaration_Name()
  {
    return (EAttribute)enumDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getEnumDeclaration_ContainedIdentifiers()
  {
    return (EAttribute)enumDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getEnumDeclaration_Declarator()
  {
    return (EAttribute)enumDeclarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAbstractCollection()
  {
    return abstractCollectionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSequenceDeclaration()
  {
    return sequenceDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSequenceDeclaration_Type()
  {
    return (EReference)sequenceDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSequenceDeclaration_Failable()
  {
    return (EAttribute)sequenceDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSequenceDeclaration_RaisedExceptions()
  {
    return (EReference)sequenceDeclarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSequenceDeclaration_SequenceHints()
  {
    return (EReference)sequenceDeclarationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAbstractSequenceHint()
  {
    return abstractSequenceHintEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTypicalLengthHint()
  {
    return typicalLengthHintEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTypicalLengthHint_Length()
  {
    return (EAttribute)typicalLengthHintEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTypicalSizeHint()
  {
    return typicalSizeHintEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTypicalSizeHint_Size()
  {
    return (EAttribute)typicalSizeHintEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTupleDeclaration()
  {
    return tupleDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTupleDeclaration_Types()
  {
    return (EReference)tupleDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStructDeclaration()
  {
    return structDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getStructDeclaration_Name()
  {
    return (EAttribute)structDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getStructDeclaration_Supertype()
  {
    return (EReference)structDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getStructDeclaration_Members()
  {
    return (EReference)structDeclarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getStructDeclaration_TypeDecls()
  {
    return (EReference)structDeclarationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getStructDeclaration_Declarator()
  {
    return (EAttribute)structDeclarationEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMemberElement()
  {
    return memberElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMemberElement_Optional()
  {
    return (EAttribute)memberElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMemberElement_Type()
  {
    return (EReference)memberElementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMemberElement_Name()
  {
    return (EAttribute)memberElementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getKeyElement()
  {
    return keyElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getKeyElement_Type()
  {
    return (EReference)keyElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getKeyElement_KeyName()
  {
    return (EAttribute)keyElementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getInterfaceDeclaration()
  {
    return interfaceDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getInterfaceDeclaration_DocComments()
  {
    return (EReference)interfaceDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInterfaceDeclaration_Abstract()
  {
    return (EAttribute)interfaceDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInterfaceDeclaration_Name()
  {
    return (EAttribute)interfaceDeclarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInterfaceDeclaration_Version()
  {
    return (EAttribute)interfaceDeclarationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInterfaceDeclaration_Guid()
  {
    return (EAttribute)interfaceDeclarationEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getInterfaceDeclaration_DerivesFrom()
  {
    return (EReference)interfaceDeclarationEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getInterfaceDeclaration_Contains()
  {
    return (EReference)interfaceDeclarationEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAbstractInterfaceComponent()
  {
    return abstractInterfaceComponentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFunctionDeclaration()
  {
    return functionDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFunctionDeclaration_DocComments()
  {
    return (EReference)functionDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFunctionDeclaration_Sync()
  {
    return (EAttribute)functionDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFunctionDeclaration_Query()
  {
    return (EAttribute)functionDeclarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFunctionDeclaration_Name()
  {
    return (EAttribute)functionDeclarationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFunctionDeclaration_Parameters()
  {
    return (EReference)functionDeclarationEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFunctionDeclaration_Injected()
  {
    return (EAttribute)functionDeclarationEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFunctionDeclaration_ReturnedType()
  {
    return (EReference)functionDeclarationEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFunctionDeclaration_RaisedExceptions()
  {
    return (EReference)functionDeclarationEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getEventDeclaration()
  {
    return eventDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getEventDeclaration_Name()
  {
    return (EAttribute)eventDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getEventDeclaration_Guid()
  {
    return (EAttribute)eventDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getEventDeclaration_Data()
  {
    return (EReference)eventDeclarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getEventDeclaration_Keys()
  {
    return (EReference)eventDeclarationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getEventDeclaration_RaisedExceptions()
  {
    return (EReference)eventDeclarationEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getReturnTypeElement()
  {
    return returnTypeElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getReturnTypeElement_Void()
  {
    return (EAttribute)returnTypeElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getParameterElement()
  {
    return parameterElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getParameterElement_Direction()
  {
    return (EAttribute)parameterElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getParameterElement_ParamType()
  {
    return (EReference)parameterElementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getParameterElement_ParamName()
  {
    return (EAttribute)parameterElementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDocCommentElement()
  {
    return docCommentElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDocCommentElement_Text()
  {
    return (EAttribute)docCommentElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPrimitiveType()
  {
    return primitiveTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPrimitiveType_IntegerType()
  {
    return (EAttribute)primitiveTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPrimitiveType_StringType()
  {
    return (EAttribute)primitiveTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPrimitiveType_CharType()
  {
    return (EAttribute)primitiveTypeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPrimitiveType_FloatingPointType()
  {
    return (EAttribute)primitiveTypeEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPrimitiveType_UuidType()
  {
    return (EAttribute)primitiveTypeEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPrimitiveType_BooleanType()
  {
    return (EAttribute)primitiveTypeEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getParameterDirection()
  {
    return parameterDirectionEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IdlFactory getIdlFactory()
  {
    return (IdlFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    idlSpecificationEClass = createEClass(IDL_SPECIFICATION);
    createEReference(idlSpecificationEClass, IDL_SPECIFICATION__IMPORTED_ENTITIES);
    createEReference(idlSpecificationEClass, IDL_SPECIFICATION__MODULES);

    importDeclarationEClass = createEClass(IMPORT_DECLARATION);
    createEAttribute(importDeclarationEClass, IMPORT_DECLARATION__IMPORTED_NAMESPACE);

    moduleDeclarationEClass = createEClass(MODULE_DECLARATION);
    createEAttribute(moduleDeclarationEClass, MODULE_DECLARATION__VIRTUAL);
    createEAttribute(moduleDeclarationEClass, MODULE_DECLARATION__MAIN);
    createEAttribute(moduleDeclarationEClass, MODULE_DECLARATION__NAME);
    createEReference(moduleDeclarationEClass, MODULE_DECLARATION__MODULE_COMPONENTS);
    createEReference(moduleDeclarationEClass, MODULE_DECLARATION__NESTED_MODULES);

    abstractModuleComponentEClass = createEClass(ABSTRACT_MODULE_COMPONENT);

    abstractExceptionEClass = createEClass(ABSTRACT_EXCEPTION);
    createEAttribute(abstractExceptionEClass, ABSTRACT_EXCEPTION__NAME);

    exceptionReferenceDeclarationEClass = createEClass(EXCEPTION_REFERENCE_DECLARATION);
    createEAttribute(exceptionReferenceDeclarationEClass, EXCEPTION_REFERENCE_DECLARATION__LOCATION);

    exceptionDeclarationEClass = createEClass(EXCEPTION_DECLARATION);
    createEReference(exceptionDeclarationEClass, EXCEPTION_DECLARATION__SUPERTYPE);
    createEReference(exceptionDeclarationEClass, EXCEPTION_DECLARATION__MEMBERS);

    abstractTypeDeclarationEClass = createEClass(ABSTRACT_TYPE_DECLARATION);

    abstractCrossReferenceEClass = createEClass(ABSTRACT_CROSS_REFERENCE);

    abstractTypeEClass = createEClass(ABSTRACT_TYPE);
    createEReference(abstractTypeEClass, ABSTRACT_TYPE__PRIMITIVE_TYPE);
    createEReference(abstractTypeEClass, ABSTRACT_TYPE__REFERENCE_TYPE);
    createEReference(abstractTypeEClass, ABSTRACT_TYPE__COLLECTION_TYPE);

    aliasDeclarationEClass = createEClass(ALIAS_DECLARATION);
    createEReference(aliasDeclarationEClass, ALIAS_DECLARATION__TYPE);
    createEAttribute(aliasDeclarationEClass, ALIAS_DECLARATION__NAME);

    enumDeclarationEClass = createEClass(ENUM_DECLARATION);
    createEAttribute(enumDeclarationEClass, ENUM_DECLARATION__NAME);
    createEAttribute(enumDeclarationEClass, ENUM_DECLARATION__CONTAINED_IDENTIFIERS);
    createEAttribute(enumDeclarationEClass, ENUM_DECLARATION__DECLARATOR);

    abstractCollectionEClass = createEClass(ABSTRACT_COLLECTION);

    sequenceDeclarationEClass = createEClass(SEQUENCE_DECLARATION);
    createEReference(sequenceDeclarationEClass, SEQUENCE_DECLARATION__TYPE);
    createEAttribute(sequenceDeclarationEClass, SEQUENCE_DECLARATION__FAILABLE);
    createEReference(sequenceDeclarationEClass, SEQUENCE_DECLARATION__RAISED_EXCEPTIONS);
    createEReference(sequenceDeclarationEClass, SEQUENCE_DECLARATION__SEQUENCE_HINTS);

    abstractSequenceHintEClass = createEClass(ABSTRACT_SEQUENCE_HINT);

    typicalLengthHintEClass = createEClass(TYPICAL_LENGTH_HINT);
    createEAttribute(typicalLengthHintEClass, TYPICAL_LENGTH_HINT__LENGTH);

    typicalSizeHintEClass = createEClass(TYPICAL_SIZE_HINT);
    createEAttribute(typicalSizeHintEClass, TYPICAL_SIZE_HINT__SIZE);

    tupleDeclarationEClass = createEClass(TUPLE_DECLARATION);
    createEReference(tupleDeclarationEClass, TUPLE_DECLARATION__TYPES);

    structDeclarationEClass = createEClass(STRUCT_DECLARATION);
    createEAttribute(structDeclarationEClass, STRUCT_DECLARATION__NAME);
    createEReference(structDeclarationEClass, STRUCT_DECLARATION__SUPERTYPE);
    createEReference(structDeclarationEClass, STRUCT_DECLARATION__MEMBERS);
    createEReference(structDeclarationEClass, STRUCT_DECLARATION__TYPE_DECLS);
    createEAttribute(structDeclarationEClass, STRUCT_DECLARATION__DECLARATOR);

    memberElementEClass = createEClass(MEMBER_ELEMENT);
    createEAttribute(memberElementEClass, MEMBER_ELEMENT__OPTIONAL);
    createEReference(memberElementEClass, MEMBER_ELEMENT__TYPE);
    createEAttribute(memberElementEClass, MEMBER_ELEMENT__NAME);

    keyElementEClass = createEClass(KEY_ELEMENT);
    createEReference(keyElementEClass, KEY_ELEMENT__TYPE);
    createEAttribute(keyElementEClass, KEY_ELEMENT__KEY_NAME);

    interfaceDeclarationEClass = createEClass(INTERFACE_DECLARATION);
    createEReference(interfaceDeclarationEClass, INTERFACE_DECLARATION__DOC_COMMENTS);
    createEAttribute(interfaceDeclarationEClass, INTERFACE_DECLARATION__ABSTRACT);
    createEAttribute(interfaceDeclarationEClass, INTERFACE_DECLARATION__NAME);
    createEAttribute(interfaceDeclarationEClass, INTERFACE_DECLARATION__VERSION);
    createEAttribute(interfaceDeclarationEClass, INTERFACE_DECLARATION__GUID);
    createEReference(interfaceDeclarationEClass, INTERFACE_DECLARATION__DERIVES_FROM);
    createEReference(interfaceDeclarationEClass, INTERFACE_DECLARATION__CONTAINS);

    abstractInterfaceComponentEClass = createEClass(ABSTRACT_INTERFACE_COMPONENT);

    functionDeclarationEClass = createEClass(FUNCTION_DECLARATION);
    createEReference(functionDeclarationEClass, FUNCTION_DECLARATION__DOC_COMMENTS);
    createEAttribute(functionDeclarationEClass, FUNCTION_DECLARATION__SYNC);
    createEAttribute(functionDeclarationEClass, FUNCTION_DECLARATION__QUERY);
    createEAttribute(functionDeclarationEClass, FUNCTION_DECLARATION__NAME);
    createEReference(functionDeclarationEClass, FUNCTION_DECLARATION__PARAMETERS);
    createEAttribute(functionDeclarationEClass, FUNCTION_DECLARATION__INJECTED);
    createEReference(functionDeclarationEClass, FUNCTION_DECLARATION__RETURNED_TYPE);
    createEReference(functionDeclarationEClass, FUNCTION_DECLARATION__RAISED_EXCEPTIONS);

    eventDeclarationEClass = createEClass(EVENT_DECLARATION);
    createEAttribute(eventDeclarationEClass, EVENT_DECLARATION__NAME);
    createEAttribute(eventDeclarationEClass, EVENT_DECLARATION__GUID);
    createEReference(eventDeclarationEClass, EVENT_DECLARATION__DATA);
    createEReference(eventDeclarationEClass, EVENT_DECLARATION__KEYS);
    createEReference(eventDeclarationEClass, EVENT_DECLARATION__RAISED_EXCEPTIONS);

    returnTypeElementEClass = createEClass(RETURN_TYPE_ELEMENT);
    createEAttribute(returnTypeElementEClass, RETURN_TYPE_ELEMENT__VOID);

    parameterElementEClass = createEClass(PARAMETER_ELEMENT);
    createEAttribute(parameterElementEClass, PARAMETER_ELEMENT__DIRECTION);
    createEReference(parameterElementEClass, PARAMETER_ELEMENT__PARAM_TYPE);
    createEAttribute(parameterElementEClass, PARAMETER_ELEMENT__PARAM_NAME);

    docCommentElementEClass = createEClass(DOC_COMMENT_ELEMENT);
    createEAttribute(docCommentElementEClass, DOC_COMMENT_ELEMENT__TEXT);

    primitiveTypeEClass = createEClass(PRIMITIVE_TYPE);
    createEAttribute(primitiveTypeEClass, PRIMITIVE_TYPE__INTEGER_TYPE);
    createEAttribute(primitiveTypeEClass, PRIMITIVE_TYPE__STRING_TYPE);
    createEAttribute(primitiveTypeEClass, PRIMITIVE_TYPE__CHAR_TYPE);
    createEAttribute(primitiveTypeEClass, PRIMITIVE_TYPE__FLOATING_POINT_TYPE);
    createEAttribute(primitiveTypeEClass, PRIMITIVE_TYPE__UUID_TYPE);
    createEAttribute(primitiveTypeEClass, PRIMITIVE_TYPE__BOOLEAN_TYPE);

    // Create enums
    parameterDirectionEEnum = createEEnum(PARAMETER_DIRECTION);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    abstractExceptionEClass.getESuperTypes().add(this.getAbstractModuleComponent());
    abstractExceptionEClass.getESuperTypes().add(this.getAbstractTypeDeclaration());
    abstractExceptionEClass.getESuperTypes().add(this.getAbstractCrossReference());
    exceptionReferenceDeclarationEClass.getESuperTypes().add(this.getAbstractException());
    exceptionDeclarationEClass.getESuperTypes().add(this.getAbstractException());
    abstractTypeDeclarationEClass.getESuperTypes().add(this.getAbstractInterfaceComponent());
    abstractTypeEClass.getESuperTypes().add(this.getReturnTypeElement());
    aliasDeclarationEClass.getESuperTypes().add(this.getAbstractModuleComponent());
    aliasDeclarationEClass.getESuperTypes().add(this.getAbstractTypeDeclaration());
    aliasDeclarationEClass.getESuperTypes().add(this.getAbstractCrossReference());
    enumDeclarationEClass.getESuperTypes().add(this.getAbstractModuleComponent());
    enumDeclarationEClass.getESuperTypes().add(this.getAbstractTypeDeclaration());
    enumDeclarationEClass.getESuperTypes().add(this.getAbstractCrossReference());
    abstractCollectionEClass.getESuperTypes().add(this.getAbstractCrossReference());
    sequenceDeclarationEClass.getESuperTypes().add(this.getAbstractCollection());
    typicalLengthHintEClass.getESuperTypes().add(this.getAbstractSequenceHint());
    typicalSizeHintEClass.getESuperTypes().add(this.getAbstractSequenceHint());
    tupleDeclarationEClass.getESuperTypes().add(this.getAbstractCollection());
    structDeclarationEClass.getESuperTypes().add(this.getAbstractModuleComponent());
    structDeclarationEClass.getESuperTypes().add(this.getAbstractTypeDeclaration());
    structDeclarationEClass.getESuperTypes().add(this.getAbstractCrossReference());
    interfaceDeclarationEClass.getESuperTypes().add(this.getAbstractModuleComponent());
    functionDeclarationEClass.getESuperTypes().add(this.getAbstractInterfaceComponent());
    eventDeclarationEClass.getESuperTypes().add(this.getAbstractInterfaceComponent());

    // Initialize classes and features; add operations and parameters
    initEClass(idlSpecificationEClass, IDLSpecification.class, "IDLSpecification", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getIDLSpecification_ImportedEntities(), this.getImportDeclaration(), null, "importedEntities", null, 0, -1, IDLSpecification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getIDLSpecification_Modules(), this.getModuleDeclaration(), null, "modules", null, 0, -1, IDLSpecification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(importDeclarationEClass, ImportDeclaration.class, "ImportDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getImportDeclaration_ImportedNamespace(), ecorePackage.getEString(), "importedNamespace", null, 0, 1, ImportDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(moduleDeclarationEClass, ModuleDeclaration.class, "ModuleDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getModuleDeclaration_Virtual(), ecorePackage.getEBoolean(), "virtual", null, 0, 1, ModuleDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getModuleDeclaration_Main(), ecorePackage.getEBoolean(), "main", null, 0, 1, ModuleDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getModuleDeclaration_Name(), ecorePackage.getEString(), "name", null, 0, 1, ModuleDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModuleDeclaration_ModuleComponents(), this.getAbstractModuleComponent(), null, "moduleComponents", null, 0, -1, ModuleDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModuleDeclaration_NestedModules(), this.getModuleDeclaration(), null, "nestedModules", null, 0, -1, ModuleDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(abstractModuleComponentEClass, AbstractModuleComponent.class, "AbstractModuleComponent", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(abstractExceptionEClass, AbstractException.class, "AbstractException", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAbstractException_Name(), ecorePackage.getEString(), "name", null, 0, 1, AbstractException.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(exceptionReferenceDeclarationEClass, ExceptionReferenceDeclaration.class, "ExceptionReferenceDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getExceptionReferenceDeclaration_Location(), ecorePackage.getEString(), "location", null, 0, 1, ExceptionReferenceDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(exceptionDeclarationEClass, ExceptionDeclaration.class, "ExceptionDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExceptionDeclaration_Supertype(), this.getAbstractException(), null, "supertype", null, 0, 1, ExceptionDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExceptionDeclaration_Members(), this.getMemberElement(), null, "members", null, 0, -1, ExceptionDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(abstractTypeDeclarationEClass, AbstractTypeDeclaration.class, "AbstractTypeDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(abstractCrossReferenceEClass, AbstractCrossReference.class, "AbstractCrossReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(abstractTypeEClass, AbstractType.class, "AbstractType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAbstractType_PrimitiveType(), this.getPrimitiveType(), null, "primitiveType", null, 0, 1, AbstractType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAbstractType_ReferenceType(), this.getAbstractCrossReference(), null, "referenceType", null, 0, 1, AbstractType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAbstractType_CollectionType(), this.getAbstractCollection(), null, "collectionType", null, 0, 1, AbstractType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(aliasDeclarationEClass, AliasDeclaration.class, "AliasDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAliasDeclaration_Type(), this.getAbstractType(), null, "type", null, 0, 1, AliasDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAliasDeclaration_Name(), ecorePackage.getEString(), "name", null, 0, 1, AliasDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumDeclarationEClass, EnumDeclaration.class, "EnumDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEnumDeclaration_Name(), ecorePackage.getEString(), "name", null, 0, 1, EnumDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEnumDeclaration_ContainedIdentifiers(), ecorePackage.getEString(), "containedIdentifiers", null, 0, -1, EnumDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEnumDeclaration_Declarator(), ecorePackage.getEString(), "declarator", null, 0, 1, EnumDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(abstractCollectionEClass, AbstractCollection.class, "AbstractCollection", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(sequenceDeclarationEClass, SequenceDeclaration.class, "SequenceDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSequenceDeclaration_Type(), this.getAbstractType(), null, "type", null, 0, 1, SequenceDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSequenceDeclaration_Failable(), ecorePackage.getEBoolean(), "failable", null, 0, 1, SequenceDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSequenceDeclaration_RaisedExceptions(), this.getAbstractException(), null, "raisedExceptions", null, 0, -1, SequenceDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSequenceDeclaration_SequenceHints(), this.getAbstractSequenceHint(), null, "sequenceHints", null, 0, -1, SequenceDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(abstractSequenceHintEClass, AbstractSequenceHint.class, "AbstractSequenceHint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(typicalLengthHintEClass, TypicalLengthHint.class, "TypicalLengthHint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTypicalLengthHint_Length(), ecorePackage.getEInt(), "length", null, 0, 1, TypicalLengthHint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typicalSizeHintEClass, TypicalSizeHint.class, "TypicalSizeHint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTypicalSizeHint_Size(), ecorePackage.getEInt(), "size", null, 0, 1, TypicalSizeHint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tupleDeclarationEClass, TupleDeclaration.class, "TupleDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTupleDeclaration_Types(), this.getAbstractType(), null, "types", null, 0, -1, TupleDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(structDeclarationEClass, StructDeclaration.class, "StructDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStructDeclaration_Name(), ecorePackage.getEString(), "name", null, 0, 1, StructDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStructDeclaration_Supertype(), this.getStructDeclaration(), null, "supertype", null, 0, 1, StructDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStructDeclaration_Members(), this.getMemberElement(), null, "members", null, 0, -1, StructDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStructDeclaration_TypeDecls(), this.getAbstractTypeDeclaration(), null, "typeDecls", null, 0, -1, StructDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getStructDeclaration_Declarator(), ecorePackage.getEString(), "declarator", null, 0, 1, StructDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(memberElementEClass, MemberElement.class, "MemberElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMemberElement_Optional(), ecorePackage.getEBoolean(), "optional", null, 0, 1, MemberElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMemberElement_Type(), this.getAbstractType(), null, "type", null, 0, 1, MemberElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMemberElement_Name(), ecorePackage.getEString(), "name", null, 0, 1, MemberElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(keyElementEClass, KeyElement.class, "KeyElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getKeyElement_Type(), this.getAbstractType(), null, "type", null, 0, 1, KeyElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getKeyElement_KeyName(), ecorePackage.getEString(), "keyName", null, 0, 1, KeyElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(interfaceDeclarationEClass, InterfaceDeclaration.class, "InterfaceDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getInterfaceDeclaration_DocComments(), this.getDocCommentElement(), null, "docComments", null, 0, -1, InterfaceDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInterfaceDeclaration_Abstract(), ecorePackage.getEBoolean(), "abstract", null, 0, 1, InterfaceDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInterfaceDeclaration_Name(), ecorePackage.getEString(), "name", null, 0, 1, InterfaceDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInterfaceDeclaration_Version(), ecorePackage.getEString(), "version", null, 0, 1, InterfaceDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInterfaceDeclaration_Guid(), ecorePackage.getEString(), "guid", null, 0, 1, InterfaceDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getInterfaceDeclaration_DerivesFrom(), this.getInterfaceDeclaration(), null, "derivesFrom", null, 0, -1, InterfaceDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getInterfaceDeclaration_Contains(), this.getAbstractInterfaceComponent(), null, "contains", null, 0, -1, InterfaceDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(abstractInterfaceComponentEClass, AbstractInterfaceComponent.class, "AbstractInterfaceComponent", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(functionDeclarationEClass, FunctionDeclaration.class, "FunctionDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFunctionDeclaration_DocComments(), this.getDocCommentElement(), null, "docComments", null, 0, -1, FunctionDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFunctionDeclaration_Sync(), ecorePackage.getEBoolean(), "sync", null, 0, 1, FunctionDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFunctionDeclaration_Query(), ecorePackage.getEBoolean(), "query", null, 0, 1, FunctionDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFunctionDeclaration_Name(), ecorePackage.getEString(), "name", null, 0, 1, FunctionDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFunctionDeclaration_Parameters(), this.getParameterElement(), null, "parameters", null, 0, -1, FunctionDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFunctionDeclaration_Injected(), ecorePackage.getEBoolean(), "injected", null, 0, 1, FunctionDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFunctionDeclaration_ReturnedType(), this.getReturnTypeElement(), null, "returnedType", null, 0, 1, FunctionDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFunctionDeclaration_RaisedExceptions(), this.getAbstractException(), null, "raisedExceptions", null, 0, -1, FunctionDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eventDeclarationEClass, EventDeclaration.class, "EventDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEventDeclaration_Name(), ecorePackage.getEString(), "name", null, 0, 1, EventDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEventDeclaration_Guid(), ecorePackage.getEString(), "guid", null, 0, 1, EventDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEventDeclaration_Data(), this.getStructDeclaration(), null, "data", null, 0, 1, EventDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEventDeclaration_Keys(), this.getKeyElement(), null, "keys", null, 0, -1, EventDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEventDeclaration_RaisedExceptions(), this.getAbstractException(), null, "raisedExceptions", null, 0, -1, EventDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(returnTypeElementEClass, ReturnTypeElement.class, "ReturnTypeElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getReturnTypeElement_Void(), ecorePackage.getEBoolean(), "void", null, 0, 1, ReturnTypeElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(parameterElementEClass, ParameterElement.class, "ParameterElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getParameterElement_Direction(), this.getParameterDirection(), "direction", null, 0, 1, ParameterElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getParameterElement_ParamType(), this.getAbstractType(), null, "paramType", null, 0, 1, ParameterElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getParameterElement_ParamName(), ecorePackage.getEString(), "paramName", null, 0, 1, ParameterElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(docCommentElementEClass, DocCommentElement.class, "DocCommentElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDocCommentElement_Text(), ecorePackage.getEString(), "text", null, 0, 1, DocCommentElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(primitiveTypeEClass, PrimitiveType.class, "PrimitiveType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPrimitiveType_IntegerType(), ecorePackage.getEString(), "integerType", null, 0, 1, PrimitiveType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPrimitiveType_StringType(), ecorePackage.getEString(), "stringType", null, 0, 1, PrimitiveType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPrimitiveType_CharType(), ecorePackage.getEString(), "charType", null, 0, 1, PrimitiveType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPrimitiveType_FloatingPointType(), ecorePackage.getEString(), "floatingPointType", null, 0, 1, PrimitiveType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPrimitiveType_UuidType(), ecorePackage.getEString(), "uuidType", null, 0, 1, PrimitiveType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPrimitiveType_BooleanType(), ecorePackage.getEString(), "booleanType", null, 0, 1, PrimitiveType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(parameterDirectionEEnum, ParameterDirection.class, "ParameterDirection");
    addEEnumLiteral(parameterDirectionEEnum, ParameterDirection.PARAM_IN);
    addEEnumLiteral(parameterDirectionEEnum, ParameterDirection.PARAM_OUT);

    // Create resource
    createResource(eNS_URI);
  }

} //IdlPackageImpl
